#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrreprt
\begin_preamble
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Präambel%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%% 
%      Pakete       %
%%%%%%%%%%%%%%%%%%%%%
\usepackage[utf8]{inputenc} % Textcodierung UTF-8
%\usepackage[english]{babel} % Deutsche Lokalisierung
%\usepackage[T1]{fontenc} % Zeichensatzkodierung
%\usepackage[scaled]{helvet} % Helvetica Schriftart
\usepackage{nicefrac} % Darstellung von Brüchen in Formeln
\usepackage{alphalph} % Option mit Buchstaben anstatt mit Zahlen zu zählen (z.B. für Seitenzahlen)
\usepackage{array}
\usepackage{amssymb}
\usepackage{amsmath} % Darstellung von Formeln
\usepackage{amsthm} % Darstellung von Mathematischen Theoremen
\usepackage{threeparttable} % Einbindung von Tabellen mit Fußnoten
\usepackage{caption} % Customise Bildunter- und Tabellenüberschriften
\usepackage{tocloft} % Formatierung von Inhaltsverzeichnis, Abbildungs- und Tabellenverzeichnis
\usepackage{booktabs} % Customise Tabellen mit Extra-Kommandos
\usepackage{enumitem} % Formatierung von Listen (itemize, enumerate and description)
\usepackage{geometry} % Einstellung der Seitengeometrie
\usepackage{siunitx} % SI-Einheiten Paket
\usepackage{color} % Für Matlab Code
\usepackage{colortbl} % Benutzung von Farben in Tabellen
\usepackage{setspace} % Zeilenabstand
\usepackage{multirow} % Tabellen Paket
\usepackage{chngcntr} % Nummerierungen
\usepackage{natbib} % Bibliographie Paket
\usepackage{graphicx} % Zur Einbindung von Abbildungen
\usepackage{epstopdf} % Möglichkeit auch .eps Dateien einzubinden
\usepackage[hyphens]{url} % URL-Paket mit Option zur Zeilentrennung nach Gedanken-/Bindestrichen
\usepackage{hyperref} % Zur Erzeugung von hyperlinks im Dokument
\usepackage[raggedleft]{titlesec} % Formatierung von Kapitel-Überschriften
\usepackage[toc,page]{appendix} % Customise den Anhang
\usepackage{listings} % Einbinden von Listen
\usepackage{nomencl} % Nomenklatur 
\usepackage{ifthen} % Für Bedingungen
\usepackage{fancyhdr} % Header & Footer Package
\usepackage[boxed,chapter]{algorithm} % Einbindung von Algorithmen als Pseudo-Code (schwarze Box um den Pseudo-Code und Nummerierung mit Einbeziehung der Kapitel Nummer
\usepackage{algpseudocode}% http://ctan.org/pkg/algorithmicx
\usepackage{tabto} % Tabulatoren
\usepackage{parskip} % Kontrolle der Absatzgröße
\usepackage[absolute]{textpos} % Positionierung
\usepackage{graphicx}
%%%%%%%%%%%%%%%%%%%%% 
%   Einstellungen   %
%%%%%%%%%%%%%%%%%%%%%
\geometry{a4paper, top=30mm, bottom=35mm, inner=35mm, outer=25mm, headsep=11mm, footskip=21mm} % Seitenformatierung

\renewcommand*\familydefault{\sfdefault} % Schriftart-Einstellung: Sans serif
\DeclareOldFontCommand{\bf}{\normalfont\bfseries}{\mathbf} % define command \bf  (used by bibliography I think)
\linespread{1.5}\selectfont % Zeilenabstand
\sloppy % Silbentrennungeinstellung: möglichst selten trennen

%Einstellungen für Seitenumbrüche  
\interfootnotelinepenalty=9999 % Kein Seitenumbruch innerhalb einer Fußnote!
\clubpenalty0
\widowpenalty0
\displaywidowpenalty0

% Kapitel und Unterkapitel Formatierung
\titleformat{\chapter}{\Large\bfseries}{\Large\bfseries\thechapter}{6pt}{\Large}
\titleformat{\section}{\large\bfseries}{\large\bfseries\thesection}{6pt}{\large}
\titleformat{\subsection}{\normalsize\bfseries}{\normalsize\bfseries\thesubsection}{6pt}{\normalsize}
\titlespacing*{\chapter}{0pt}{-35pt}{0pt} % Vertikale Abstände
\titlespacing*{name=\chapter,numberless}{0pt}{-35pt}{0pt}
\titlespacing*{\section}{0pt}{0pt}{0pt}
\titlespacing*{\subsection}{0pt}{0pt}{0pt}

% Abbildungs-/Tabelleneinstellungen
\captionsetup{labelfont={bf}} % Abbildung/Tabelle fett drucken

% SI-Einheit Einstellungen
\sisetup{per-mode = symbol}%
\sisetup{detect-weight = true}

% Definition von Befehlen, um Unterkapitel des Anhangs nicht ins Inhaltsverzeichnis aufzunehmen
\newcommand{\stoptocwriting}{\addtocontents{toc}{\protect\setcounter{tocdepth}{-5}}} % Stopt die Aufnahme von Kapitelnamen ins Inhaltsverzeichnis
\newcommand{\resumetocwriting}{\addtocontents{toc}{\protect\setcounter{tocdepth}{\arabic{tocdepth}}}} % Nimmt die Aufnahme von Kapitelnamen ins Inhaltsverzeichnis wieder auf
  
% Einbindung von Matlab-Code mit den Matlab-Farben
\definecolor{mlgreen}{rgb}{.035,.6,.251}
\definecolor{mlviolett}{rgb}{.643,.259,.804}
\lstdefinestyle{mlab}{language=Matlab, 
otherkeywords={},
deletekeywords={def,real,length,gamma,zeros,figure,subplot,plot,xlabel,ylabel,zlabel,sin,pi,diff,size,meshgrid,legend,surf,min,trapz,cos,eig,exp,abc},
numbers=left,
numberstyle=\tiny,%5
basicstyle={\ttfamily},%
keywordstyle={\color{blue}},%
commentstyle=\color{mlgreen},%
stringstyle=\color{mlviolett},%
breaklines=true,%
showstringspaces=false,%
numberbychapter=true, %
xleftmargin=15pt
 }

% Einstellungen für das Symbolverzeichnis
\newlength{\nomgroupstartsep}
\setlength{\nomgroupstartsep}{16pt}

\newlength{\nomintermsep}
\setlength{\nomintermsep}{-\parsep}


\renewcommand{\nomgroup}[1]{%
	\ifthenelse{\equal{#1}{A}}{\item[\textbf{Abbreviations}]}{%
	\ifthenelse{\equal{#1}{I}}{\vspace{16pt} \item[\textbf{Indices}]}{%
	\ifthenelse{\equal{#1}{G}}{\vspace{16pt} \item[\textbf{Greek Symbols}]}{%
	\ifthenelse{\equal{#1}{L}}{\vspace{16pt} \item[\textbf{Latin Symbols}]}}}}

}
\setlength{\nomlabelwidth}{.2\hsize} % Abstand zwischen Variable und Erklärung
\setlength{\nomitemsep}{-\parsep} % Zeilenabstand verkleinern
\renewcommand{\nomlabel}[1]{#1 \dotfill} % Punkte zw. Abkürzung und Erklärung
\newcommand{\nomunit}[1]{\renewcommand{\nomentryend}{\dotfill #1}}
\makenomenclature % Erstellen des Symbolverzeichnisses

% Einstellung Hyperlink
\hypersetup{colorlinks,citecolor=black,filecolor=black,linkcolor=black,urlcolor=black} % Hyperlink Einstellungen

% Einstellung Algorithmus Package
\floatname{algorithm}{Algorithmus} % Unterschrift eines Algorithmus ist auf Deutsch

% Header & Footer Einstellungen
  \pagestyle{fancy} %eigener Seitenstil
\renewcommand{\chaptermark}[1]{\markboth{\thechapter~ #1}{}}
\renewcommand{\sectionmark}[1]{\markright{\thechapter~ #1}}

  \fancyhf{}%alle Kopf- und Fußzeilenfelder bereinigen
  \renewcommand{\headrulewidth}{0.4pt}%obere Trennlinie
  \fancyhead[R]{\small{\nouppercase\leftmark}}
  \renewcommand{\footrulewidth}{0.4pt}%untere Trennlinie
  \fancyfoot[L]{\small{Institute of Aircraft Design $\quad |\quad$  Technical University of Munich}}
  \fancyfoot[R]{\thepage} %Seitennummer

	\fancypagestyle{plain}{
  \fancyhf{}
  \renewcommand{\headrulewidth}{0.4pt}
  \fancyhead[R]{\small{\nouppercase\leftmark}}
  \renewcommand{\footrulewidth}{0.4pt}
  \fancyfoot[L]{\small{Institute of Aircraft Design $\quad |\quad$  Technical University of Munich}}
  \fancyfoot[R]{\thepage}
}

\edef\restoreparindent{\parindent=\the\parindent\relax}
\restoreparindent
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% tikz
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage{tikz}
\usepackage{pgf}
\usepackage{stanli}
\usepackage{pgfplots}
\usetikzlibrary{calc}
\usetikzlibrary{shapes,arrows,  positioning, calc,trees, fit, backgrounds}
\makeatletter
\newcount\dirtree@lvl
\newcount\dirtree@plvl
\newcount\dirtree@clvl
\def\dirtree@growth{%
  \ifnum\tikznumberofcurrentchild=1\relax
  \global\advance\dirtree@plvl by 1
  \expandafter\xdef\csname dirtree@p@\the\dirtree@plvl\endcsname{\the\dirtree@lvl}
  \fi
  \global\advance\dirtree@lvl by 1\relax
  \dirtree@clvl=\dirtree@lvl
  \advance\dirtree@clvl by -\csname dirtree@p@\the\dirtree@plvl\endcsname
  \pgf@xa=3.5mm\relax
  \pgf@ya=-3.5mm\relax
  \pgf@ya=\dirtree@clvl\pgf@ya
  \pgftransformshift{\pgfqpoint{\the\pgf@xa}{\the\pgf@ya}}%
  \ifnum\tikznumberofcurrentchild=\tikznumberofchildren
  \global\advance\dirtree@plvl by -1
  \fi
}
\tikzstyle{every node}=[thick,anchor=west] 
\tikzstyle{selected}=[draw=black]
\tikzstyle{root}=[selected]
\tikzset{
  dirtree/.style={
    growth function=\dirtree@growth,
    every node/.style={anchor=north},
    every child node/.style={anchor=west},
    edge from parent path={(\tikzparentnode\tikzparentanchor) |- (\tikzchildnode\tikzchildanchor)}
  }
}
\pgfdeclarepatternformonly{my pattern}{\pgfqpoint{-0.2pt}{-0.2pt}}{\pgfqpoint{5.2pt}{5pt}}{\pgfqpoint{5pt}{5pt}}{
\pgfsetlinewidth{0.4pt}
\pgfpathmoveto{\pgfqpoint{-0.2pt}{-0.2pt}}
\pgfpathlineto{\pgfqpoint{5.2pt}{5.2pt}}
\pgfusepath{stroke}}


\usetikzlibrary{shapes.geometric, arrows, shadows}
\usetikzlibrary{fit,backgrounds} % <-added
\usetikzlibrary{arrows, arrows.meta, bending, calc, chains, decorations,
                decorations.pathmorphing, decorations.markings, matrix, intersections, 
                patterns, positioning, shapes}
% Define block styles 
\tikzstyle{io} = [trapezium, draw, trapezium left angle=70, trapezium right angle=110, minimum height=5ex, text centered, fill=blue!50, node distance=10ex]
\tikzstyle{decision} = [diamond, aspect=4, draw, fill=red!33, text width=7em, text badly centered, node distance=15ex, inner sep=0pt] 
\tikzstyle{block1} = [rectangle, draw, fill=green!33, node distance=8ex, text centered, text width=35ex, minimum height=3ex] 
\tikzstyle{block2} = [rectangle, draw, fill=blue!33, node distance=8ex, text centered, text width=35ex, minimum height=3ex] 
\tikzstyle{block3} = [rectangle, draw, fill=blue!70!red!10, node distance=15ex, text centered, rounded corners, text width=35ex, minimum height=3ex] 
\tikzstyle{line} = [draw, -latex] %\tikzstyle{cloud} = [draw, ellipse,fill=green!20, node distance=3cm, minimum height=2em] 
\tikzstyle{cloud} = [draw, rectangle,fill=green!20, node distance=25ex, minimum height=5ex, rounded corners]
\tikzstyle{arrow} = [thick,->,>=stealth]  
\tikzstyle{startstop} = [rectangle, rounded corners, text width=35ex, minimum height=3ex, text centered, draw=black, fill=orange!40]
\tikzset{
diagonal fill/.style 2 args={fill=#2, path picture={
\fill[#1, sharp corners] (path picture bounding box.south west) -|
                         (path picture bounding box.north east) -- cycle;}},
reversed diagonal fill/.style 2 args={fill=#2, path picture={
\fill[#1, sharp corners] (path picture bounding box.north west) |- 
                         (path picture bounding box.south east) -- cycle;}}
}
\usetikzlibrary{decorations.text,arrows.meta,bending}
\end_preamble
\options parskip,pointlessnumbers
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding global
\font_roman "palatino" "default"
\font_sans "helvet" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{Roman} % Römische Seitenzahlen
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newlength
\backslash
figureheight
\end_layout

\begin_layout Plain Layout


\backslash
newlength
\backslash
figurewidth
\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
Abstract
\end_layout

\begin_layout Standard
In this work a large scale topology optimization tool in the Open Source
 framework 
\noun on
Kratos
\noun default
 is presented.
 Topology Optimization Application was developed in 2015 and is written
 in the programming languages C++ and Python.
 The application was not active in the last years.
 Within this thesis the old version of the topology optimization code is
 reactivated and updated.
 To achieve this the application is linked to the Structural Mechanics Applicati
on in 
\noun on
Kratos
\noun default
 and the current interface of Python and C++ is implemented.
 Based on this, the optimization tool is improved and extended with new
 implementations.
 The new implementations include existing topology optimization methods,
 such as density filtering and the optimization algorithm Method of Moving
 Asymptotes (MMA).
 The extensions and changes within the code are verified with a benchmark
 code in Matlab.
 This is done by using a MMB beam as a benchmark example.
 Moreover, the optimization tool in 
\noun on
Kratos
\noun default
 is applied to a large scale problem using an aerial lift pylon as an example.
\end_layout

\begin_layout Standard

\series bold
Keywords
\series default
: Topology optimization, Open Source, MMA, Kratos, Python, C++
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\size small

\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\size small

\begin_inset FloatList figure

\end_inset


\size default

\begin_inset ERT
status open

\begin_layout Plain Layout

 
\backslash
addcontentsline{toc}{chapter}{List of Figures}
\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\size small

\begin_inset FloatList table

\end_inset


\size default

\begin_inset ERT
status open

\begin_layout Plain Layout

 
\backslash
addcontentsline{toc}{chapter}{List of Tables}
\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

 
\backslash
addcontentsline{toc}{chapter}{Nomenclature}
\end_layout

\end_inset


\begin_inset FormulaMacro
\newcommand{\vectordesign}{\underline{x}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\vectordesign$"
description "Vector with design variables"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\compliance}{C(\underline{x})}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\compliance$"
description "Objective function"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\designvaraible}{x_{e}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\designvaraible$"
description "Design variable"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\constrainfunctval}{g}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\constrainfunctval$"
description "Constraint function value"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\elementdesn}{x_{e,\text{phys}}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\elementdesn$"
description "Density of design variable"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\solidelemdens}{x_{0}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\solidelemdens$"
description "Density of base material"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\Emodulelm}{E_{e}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\Emodulelm$"
description "Young's modulus of design varaible"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\minemodul}{E_{\min}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\minemodul$"
description "Minimum Young's modulus"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\baseEmodul}{E_{0}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\baseEmodul$"
description "Young's modulus of the base material"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\penaltyfactor}{p}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\penaltyfactor$"
description "Penalty factor"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\stinessEmodullow}{\underline{\underline{K_{e,0}}}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\stinessEmodullow$"
description "Element stiffness matrix with Young's modulus = 1"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\stiffnesselement}{\underline{\underline{K_{e}}}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\stiffnesselement$"
description "Element stiffness matrix "
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\globalstiffness}{\underline{\underline{K}}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\globalstiffness$"
description "Global stiffness matrix "
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\forcevector}{\underline{F}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\forcevector$"
description "Force vector"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\displacementvect}{\underline{u}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\displacementvect$"
description "Global displacement vector"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\elementdisp}{\underline{u_{e}}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\elementdisp$"
description "Element displacement vector"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\complianceelem}{C(x_{e})}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\complianceelem$"
description "Compliance of the element"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\volumefrac}{v_{\text{frac}}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\volumefrac$"
description "Volume fraction limit"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\numberofelem}{N}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\numberofelem$"
description "Number of elements"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\compliancesens}{\dfrac{dC}{d\underline{x}}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\compliancesens$"
description "Objective function sensitivity"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\filteredCompliancesensElem}{\hat{\dfrac{dC}{dx_{e}}}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\filteredCompliancesensElem$"
description "Filtered objective function sensitivity"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\weightingfactor}{H_{ei}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\weightingfactor$"
description "Weighting factor"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\filteringradius}{r_{min}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\filteringradius$"
description "Filtering radius"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\numberOfSurrEle}{N_{e}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\numberOfSurrEle$"
description "Number of surrounding elements"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\filtereddesignvar}{\hat{x}_{e}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\filtereddesignvar$"
description "Filtered design variable"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\greyscale}{q}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\greyscale$"
description "Grey scale exponent"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\numberOfIt}{j}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\numberOfIt$"
description "Number of iterations"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\movelim}{m}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\movelim$"
description "Move limit"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\optimalitycond}{B}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\optimalitycond$"
description "Optimality condition"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\lagrange}{\lambda}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\lagrange$"
description "Lagrangian multiplier"
literal "true"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\dampingpara}{\eta}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\dampingpara$"
description "Damping parameter"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\volumeconstSens}{\dfrac{dg}{dx_{e}}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\volumeconstSens$"
description "Constraint function sensitivity"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\upper}{U}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\upper$"
description "Upper asymptote"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\lower}{L}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\lower$"
description "Lower asymptote"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\xmax}{x^{\max}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\xmax$"
description "Maximum allowable  value of the design variable within MMA Algorithm"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\xmin}{x^{\min}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\xmin$"
description "Minimum allowable  value of the design variable within MMA Algorithm"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\xmaxx}{x_{\max}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\xmaxx$"
description "Maximum allowable value of the design variable"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\xminn}{x_{\min}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\xminn$"
description "Minimum allowable value of  the design variable"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\constSensvec}{\underline{\text{\text{\ensuremath{\dfrac{dg}{d\underline{x}}}}}}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\constSensvec$"
description "Vector of constraint function value sensitivities"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\compSensvec}{\text{\ensuremath{\underline{\dfrac{dC}{d\underline{x}}}}}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\compSensvec$"
description "Vector of objective function sensitivities"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\volvracit}{g_{comp}}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\volvracit$"
description "Volume fration of the model within the iteration"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\numeq}{n}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\numeq$"
description "Number of equality constraints"
literal "true"

\end_inset


\begin_inset FormulaMacro
\newcommand{\numeqq}{a}
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "$\\numeqq$"
description "Number of inequality constraints"
literal "true"

\end_inset


\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "custom"
width "3cm"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage cleardoublepage
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout Standard
Lightweight structures and optimized designs are important issues in mechanical
 engineering.
 In general an optimization can improve the performance of a structure as
 well as reduce the resources needed to construct it.
 By optimizing a structure, the weight can be reduced and less weight results
 in lower forces working onto the structure.
 With the lower forces the structure can be optimized again.
 Within this “virtuous circle of lightweight engineering design” one of
 the steps to optimize the structure can be the topology optimization.
 
\end_layout

\begin_layout Standard
Topology optimization is an advanced structural design method, where by
 searching the optimal distributions of the material inside the defined
 design domain, the stiffness of the structure can be improved.
 This can be achieved by gradient based optimization algorithms.
 Such algorithms are often used in the field of structural mechanics (
\begin_inset CommandInset citation
LatexCommand citealt
key "Baier1994"
literal "false"

\end_inset

).
\end_layout

\begin_layout Standard
Topology optimization is one of the research fields at the Institute of
 Aircraft Design at the Technical University Munich, especially within the
 project 
\noun on

\begin_inset Quotes eld
\end_inset

Milan
\noun default
 - Morphing Wings for Sailplanes
\begin_inset Quotes erd
\end_inset

.
 As a part of this project a new optimization code was developed for linear
 and non-linear finite element method as well as stress constraints (
\begin_inset CommandInset citation
LatexCommand citealt
key "Reinisch2017,Reinisch2019"
literal "false"

\end_inset

).
 
\end_layout

\begin_layout Standard
Following the example of 
\noun on
Reinisch
\noun default
, a new version of Topology Optimization Application will be introduced.
 This is done as a part of this thesis at the Institute of Aircraft Design
 at TUM in collaboration with the Free University of Bozen-Bolzano.
 Topology Optimization Application is implemented in the open source framework
 
\noun on
Kratos 
\noun default
and was developed by 
\noun on
Gonzales
\noun default
 and 
\noun on
Malfavon
\noun default
 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Gonzalez2015,Malfavon2016"
literal "false"

\end_inset

).
 Through the reanimation and extension of the Topology Optimization Application
 in 
\noun on
Kratos,
\noun default
 a new tool for future optimization problems in projects like 
\noun on
Milan
\noun default
 or in topics of further research is available.
\end_layout

\begin_layout Standard
Within the scope of this work the existing code was reactivated, old functions
 were improved and new implementations were applied.
 One of which is an additional optimization algorithm: the Method of Moving
 Asymptotes (MMA).
 Within this thesis the new implementations are presented and verified.
 To do this, the Matlab topology optimization code for 3D structures, called
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top3d
\end_layout

\end_inset

, is taken as a benchmark code (
\begin_inset CommandInset citation
LatexCommand citealt
key "Liu2014"
literal "false"

\end_inset

).
 To achieve a comparability between the codes, a benchmark example is introduced
 by using a MBB beam.
 
\end_layout

\begin_layout Standard
To present a practical example, a structure from the industry is optimized.
 An aerial lift pylon from 
\noun on
Leitner
\noun default
 is modeled and simulated, to show a possible application of the code on
 a structure in the industry environment.
 
\end_layout

\begin_layout Standard
The first chapter of the thesis introduces topology optimization and the
 mathematical background.
 Hereby included are the different filtering methods and optimization algorithms
 used by the application.
 This is followed by a presentation of the framework 
\noun on
Kratos 
\noun default
and the existing Topology Optimization Application.
 Based on this, the new implementation is presented.
 Using the benchmark example, the new functions are compared with either
 the benchmark code or the existing Topology Optimization Application.
 With the example of the aerial lift pylon, the use of the code on a large
 structure is presented.
 The thesis is concluded with a short summary of the work and possible extension
s as well as improvements of the application.
\end_layout

\begin_layout Standard
The final version of the Topology Optimization Application as a result of
 this thesis can be found in the following repository: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/PhiHo-eng/Kratos
\end_layout

\end_inset

.
\end_layout

\begin_layout Chapter
Fundamentals of Topology Optimization
\begin_inset CommandInset label
LatexCommand label
name "sec:Fundamentals-of-Topology"

\end_inset


\end_layout

\begin_layout Standard
Topology and shape optimization of existing problems and structures are
 topics with an increasing importance within the engineering community (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bletzinger2020"
literal "false"

\end_inset

).
 Advancing technology and breakthroughs like 3D printing make applications
 as topology optimization or shape optimization more important.
 Structures which seem to be the best solution in either amount of material,
 occurring forces or even just design appearance, do not seem so hard to
 construct and build as they did a few years ago.
 Saving material within a given volume and application is also a major advantage
 of these optimization applications.
 Existing structures can be modified and improved, without losing the original
 functionality, given that the forces and surrounding conditions are implemented
 in the simulation accordingly.
\end_layout

\begin_layout Standard
This seems to be only possible for companies with a budget which is big
 enough to finance such advanced programs.
 The thought behind this project is to create a topology optimization code
 as part of the 
\noun on
Kratos
\noun default
 
\noun on
Multiphysics
\noun default
 open-software Large-scale computation software.
 In order to provide smaller companies or research facilities an opportunity
 to optimize their structures or at least improve them and save material
 and therefore costs in the construction.
\end_layout

\begin_layout Standard
In order to find an optimum, there are different approaches to get an optimized
 structure.
 These different approaches can be divided in two categories.
 The methods are based on either gradient based calculations or on non-gradient
 based calculations.
 Within this thesis topology optimization with gradient based algorithms
 is used.
 The goal of topology optimization is to find the right vector 
\begin_inset Formula $\underline{x}$
\end_inset

 with the densities so that the constraints are satisfied.
 
\end_layout

\begin_layout Section
Introduction to Topology Optimization
\end_layout

\begin_layout Standard
To find the optimum material distribution in a given volume, topology optimizati
on can be used.
 The optimization is constrained by the percentage by which the design domain
 is covered.
 The boundary conditions define where the structure is kept into place and
 where the force works onto the structure.
 
\end_layout

\begin_layout Standard
In figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "design domain"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the design domain is shown with the given boundary conditions.
 The volume to be optimized is defined within 
\begin_inset Formula $\Gamma$
\end_inset

.
 This domain contains the space 
\begin_inset Formula $\Omega$
\end_inset

 and is connected with the surrounding at 
\begin_inset Formula $\Gamma_{d}$
\end_inset

.
 The domain is being affected from the outside by 
\begin_inset Formula $t$
\end_inset

 at the surface 
\begin_inset Formula $\Gamma_{t}$
\end_inset

 and by the body forces 
\begin_inset Formula $g$
\end_inset

 within itself.
 Important to know is that within the space 
\begin_inset Formula $\Omega$
\end_inset

 there can be spaces that are defined to be solid 
\begin_inset Formula $\Omega_{s}$
\end_inset

 or to be a void space 
\begin_inset Formula $\Omega_{v}$
\end_inset

.
 With these definitions and the topology optimization an optimal material
 distribution is seeked (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bendsoe2004"
literal "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Design_raum.pdf
	lyxscale 20
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Parametrization of the design domain (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bendsoe2004"
literal "false"

\end_inset

).
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "design domain"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
To solve the given problem the original volume has to be discretized.
 This means that the volume is divided into smaller elements.
 The density of these elements is referred to as the design variable.
 The design variables can be written as a vector: 
\begin_inset Formula 
\begin{equation}
\underline{x}=\begin{bmatrix}x_{1} & x_{2} & x_{3} & \ldots & x_{n}\end{bmatrix}^{T}
\end{equation}

\end_inset

By using the optimization, the design variables are changed in order to
 get the optimal material distribution, while remaining within the domain
 and the given constraints.
\end_layout

\begin_layout Standard
To achive the optimization, the minimum compliance approach (see section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Compliance-Minimization"
plural "false"
caps "false"
noprefix "false"

\end_inset

) is used.
 In this formulation the structure with the highest stiffness is seeked
 by varying the design variables.
 
\end_layout

\begin_layout Standard
The optimization process can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "optimization process"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 To begin with, a structural analysis is made with the discretized design
 volume.
 For this a finite element method (FEM) approach is used, which is the most
 common method for structural analysis (
\begin_inset CommandInset citation
LatexCommand citealt
key "Wall2020"
literal "false"

\end_inset

).
 With the results of the Finite Element Analysis (FEA), the compliance and
 the sensitivities are calculated, followed by the filtering of these sensitivit
ies.
 The gained information is used in the next step to update the design variable
 vector 
\begin_inset Formula $\underline{x}$
\end_inset

 with an optimization algorithm (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Optimization-algorithm"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 In the final step the convergence criteria is checked.
 Should the optimization have reached the convergence criteria the process
 is stopped, otherwise the next iteration is initiated.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Flowchart_allgemein.pdf
	lyxscale 10
	width 90text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
General topology optimization process flow (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bendsoe2004"
literal "false"

\end_inset

).
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "optimization process"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
To avoid a trivial solution, where the beam is fully filled with material,
 the amount of volume covering the design domain has to be constrained.
 This is done by the volume fraction constraint, which is common for a topology
 optimization problem.
\end_layout

\begin_layout Standard
With these information it is possible to write the basic formula for the
 optimization problem:
\begin_inset Formula 
\begin{equation}
\begin{array}{ccc}
 & \min_{x\in X}\left\{ C\left(\underline{x}\right)\right\} \\
\text{subject to:} & g_{j}\left(\underline{x}\right)\leq0 & j=1,...,a\\
 & h_{k}\left(\underline{x}\right)=0 & k=1,...,n
\end{array}\label{eq:minimization equation}
\end{equation}

\end_inset

where the 
\begin_inset Formula $N$
\end_inset

 design variables of 
\begin_inset Formula $\underline{x}$
\end_inset

 are varied in the range of 
\begin_inset Formula $X$
\end_inset

 in order to minimize the objective function 
\begin_inset Formula $C$
\end_inset

.
 For the optimization to work, the inequality constraint 
\begin_inset Formula $g_{j}$
\end_inset

 or the equality constraint 
\begin_inset Formula $h_{k}$
\end_inset

 have to be fulfilled.
 The given functions are connected with the so-called system equations,
 which define the physical behavior of the problem at hand.
 With topology optimization these are being solved with FEM.
 Therefore the behavior of the element has an impact on the stiffness matrices
 of the model.
 In this case solid elements use the given material properties, whereas
 the void elements use very low material property values.
 To do this, the design variables and the element stiffness matrices have
 to be linked mathematically.
 
\end_layout

\begin_layout Standard
With the material distribution being a discrete problem (either solid or
 void elements), also the design variables are discrete.
 Therefore the computational effort to solve it is very high (
\begin_inset CommandInset citation
LatexCommand citealt
key "Zhu2016"
literal "false"

\end_inset

).
 To avoid this, discrete values of the design variable are replaced with
 continuous values (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bendsoe2004"
literal "false"

\end_inset

).
 As a result, the mathematical relationship between design variables and
 element stiffness matrices is continuous too.
 This modification is called the relaxation of the design variables (
\begin_inset CommandInset citation
LatexCommand citealt
key "Sigmund1998"
literal "false"

\end_inset

).
\end_layout

\begin_layout Standard
By using so-called interpolation methods this mathematical connection can
 be described.
 In this work the most frequently applied interpolation method is used:
 the SIMP approach.
 Within the following section this approach will be further discussed.
\end_layout

\begin_layout Section
SIMP (Solid Isotropic Material Penalization)
\end_layout

\begin_layout Standard
Topology optimization, as it is shown in this work, uses the normalized
 densities 
\begin_inset Formula $x_{e}$
\end_inset

 of the element as design variables.
 
\begin_inset Formula $x_{e}$
\end_inset

 is defined as:
\begin_inset Formula 
\begin{equation}
\begin{array}{ccc}
x_{e}=\dfrac{x_{e,\text{phys}}}{x_{0}} & \text{with} & 0<x_{e}<1\end{array}
\end{equation}

\end_inset

 where 
\begin_inset Formula $x_{e,\text{phys}}$
\end_inset

 is the density of the given element and 
\begin_inset Formula $x_{0}$
\end_inset

 the density of the given material.
 By this definition the solid element is achieved with 
\begin_inset Formula $x_{e}=1$
\end_inset

 and the void element with 
\begin_inset Formula $x_{e}=0$
\end_inset

.
 To connect the design variables to the element stiffness matrices, the
 SIMP (
\begin_inset Quotes eld
\end_inset

Solid Isotropic Material with Penalization
\begin_inset Quotes erd
\end_inset

 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Zhou1991"
literal "false"

\end_inset

)) approach is introduced.
\end_layout

\begin_layout Standard
By changing the Young's modulus, the properties of the element can be altered
 and with the SIMP approach the properties are linked to the design variables.
 For solid elements the Young's modulus 
\begin_inset Formula $E_{0}$
\end_inset

 of the base material is used.
 For void elements on the other hand a very low Young's 
\begin_inset Formula $E_{\min}$
\end_inset

 modulus is applied.
 It has to be avoided to set the 
\begin_inset Formula $E_{\min}$
\end_inset

 to zero, otherwise singularities in the stiffness matrices could occur.
 Therefore following conditions have to be applied: 
\begin_inset Formula 
\begin{equation}
\begin{array}{cccc}
E_{e}=E_{\min} & \text{for} & x_{e}=0 & ,0<E_{\min}\leq E_{e}\leq E_{0}\\
E_{e}=E_{0} & \text{for} & x_{e}=1
\end{array}
\end{equation}

\end_inset

Although the properties can be modified by the SIMP approach so that semi-dense
 elements can occur, this is not possible in reality.
 To avoid these semi-dense elements, the so-called grey elements, a penalty
 term 
\begin_inset Formula $p$
\end_inset

 is introduced.
 With this modification the relation can be written as:
\begin_inset Formula 
\begin{equation}
\begin{array}{ccc}
E_{e}\left(x_{e}\right)=E_{0}\cdot x_{e}^{p} & \text{with} & x_{\mathrm{\min}}<x_{e}<1\quad.\end{array}
\end{equation}

\end_inset

In order for the condition 
\begin_inset Formula $E\left(x_{e,\min}\right)=E_{\min}>0$
\end_inset

 to be true, a lower boundary for the design variable is introduced: 
\begin_inset Formula $x_{\min}$
\end_inset

.
\end_layout

\begin_layout Standard
Building on this, the modified SIMP approach can be arranged.
 In this case the constraint of the minimum density is not needed.
 Only the minimum Young's modulus is integrated in the equation:
\begin_inset Formula 
\begin{equation}
\begin{array}{ccc}
E_{e}\left(x_{e}\right)=E_{min}+\left(E_{0}-E_{min}\right)x_{e}^{p} & \text{with} & 0<x_{e}<1\end{array}\label{eq:modified SIMP}
\end{equation}

\end_inset

where 
\begin_inset Formula $x_{e}$
\end_inset

 has to be within the boundary values 
\begin_inset Formula $0$
\end_inset

 and 
\begin_inset Formula $1$
\end_inset

.
 With this formulation the application is well suited for filtering methods.
 Additionally, the penalty term does not affect the void properties (
\begin_inset CommandInset citation
LatexCommand citealt
key "Sigmund2007"
literal "false"

\end_inset

).
 
\end_layout

\begin_layout Standard
The penalty term embraces the design variables to develop towards 
\begin_inset Formula $0$
\end_inset

 and 
\begin_inset Formula $1$
\end_inset

 solutions in order to avoid grey elements.
 For two dimensional problems the penalty factor is mostly chosen as 
\begin_inset Formula $2$
\end_inset

, with 3-dimensional problems commonly 
\begin_inset Formula $3$
\end_inset

 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bendsoe2004"
literal "false"

\end_inset

).
 
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "penatly value"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows the resulting modification of the SIMP approach from equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:modified SIMP"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 With higher values for the penalty term 
\begin_inset Formula $p$
\end_inset

, elements with intermediate densities are punished.
 In these cases the value of the Young's modulus 
\begin_inset Formula $E_{e}$
\end_inset

 decreases drastically towards 
\begin_inset Formula $E_{\min}$
\end_inset

 with densities below 1.
 With this modification grey elements are avoided and a black white solution
 is encouraged.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Diagramm_exponent.pdf
	lyxscale 20
	width 70text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Penalization of the semi-dens elements within the SIMP approach (
\begin_inset CommandInset citation
LatexCommand citealt
key "Reinisch2019"
literal "false"

\end_inset

).
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "penatly value"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the FEA every element stiffness matrix is arranged with the Young's modulus
 
\begin_inset Formula $E=1$
\end_inset

.
 The result is 
\begin_inset Formula $\underline{\underline{K_{e,0}}}$
\end_inset

, which is in a second step modified with the SIMP approach:
\begin_inset Formula 
\begin{equation}
\underline{\underline{K_{e}}}=\left(E_{min}+\left(E_{0}-E_{min}\right)x_{e}^{p}\right)\underline{\underline{K_{e,0}}}\quad.\label{eq:modified simp}
\end{equation}

\end_inset

By considering all stiffness matrices 
\begin_inset Formula $\underline{\underline{K_{e}}}$
\end_inset

 of the elements, the global stiffness matrix 
\begin_inset Formula $\underline{\underline{K}}$
\end_inset

 can be assembled.
\end_layout

\begin_layout Section
Compliance Minimization
\begin_inset CommandInset label
LatexCommand label
name "sec:Compliance-Minimization"

\end_inset


\end_layout

\begin_layout Standard
To find the structure with the highest stiffness with the given constraint,
 the minimum compliance formulation is used (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bendsoe2004"
literal "false"

\end_inset

).
 Minimum compliance can also be described as the minimization of the strain
 energy.
 Therefore the energy that results from the force upon the structure and
 the displacement which is caused by it, is minimized.
 The objective function of the minimization problem is:
\begin_inset Formula 
\begin{equation}
\min_{x\in X}\left\{ C\left(\underline{x}\right)\right\} 
\end{equation}

\end_inset

from the equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:minimization equation"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and the corresponding constraints.
 The compliance can be written as:
\begin_inset Formula 
\begin{equation}
C(\underline{x})=\underline{F}^{T}\underline{u}\quad.\label{eq:ftu}
\end{equation}

\end_inset

With 
\begin_inset Formula $\underline{F}$
\end_inset

 being the external force onto the structure and 
\begin_inset Formula $\underline{u}$
\end_inset

 the resulting displacement vector.
 By reforming the equations using the stiffness matrix 
\begin_inset Formula $\underline{\underline{K}}$
\end_inset

 of the structure, the force can also be written as:
\begin_inset Formula 
\begin{equation}
\underline{F}=\underline{\underline{K}}\underline{u}\quad.\label{eq:fku}
\end{equation}

\end_inset

With this in mind the compliance 
\begin_inset Formula $C(\underline{x})$
\end_inset

 can also be written in the following manner:
\begin_inset Formula 
\begin{equation}
\begin{array}{cc}
C(\underline{x}) & =\underline{F}^{T}\underline{u}\\
 & =\underline{u}^{T}\underline{\underline{K}}\underline{u}
\end{array}\quad.
\end{equation}

\end_inset

The compliance can now be calculated for every single element:
\begin_inset Formula 
\begin{equation}
C(x_{e})=\underline{u_{e}}^{T}\underline{\underline{K_{e}}}\underline{u_{e}}\label{eq:element compliance}
\end{equation}

\end_inset

with 
\begin_inset Formula $\underline{u_{e}}$
\end_inset

 being the displacement vector of the element.
 Using this information the compliance of the structure can be written as
 a summation of the compliance of every element:
\begin_inset Formula 
\begin{equation}
C(\underline{x})=\sum_{e=1}^{N}\underline{u_{e}}^{T}\underline{\underline{K_{e}}}\underline{u_{e}}\quad.
\end{equation}

\end_inset

Introducing the modified SIMP approach from equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:modified simp"
plural "false"
caps "false"
noprefix "false"

\end_inset

, the compliance can be calculated as:
\begin_inset Formula 
\begin{equation}
C(\underline{x})=\sum_{e=1}^{N}\left(E_{min}+\left(E_{0}-E_{min}\right)x_{e}^{p}\right)\underline{u_{e}}^{T}\underline{\underline{K_{e,0}}}\underline{u_{e}}\quad.
\end{equation}

\end_inset

To avoid a trivial solution, where the design domain is filled with solid
 elements, the constraint has to be applied to the minimization problem.
 The volume fraction 
\begin_inset Formula $v_{\text{frac}}$
\end_inset

 limits the allowed amount of material within the design domain.
 The constraint function within this work is written as:
\begin_inset Formula 
\begin{equation}
\sum_{e=1}^{N}x_{e}\leq v_{\text{frac}}\cdot N\label{eq:constrain function}
\end{equation}

\end_inset

with 
\begin_inset Formula $N$
\end_inset

 being the number of elements.
 This means the summation of all element densities has to be smaller than
 the limited amount of material.
\end_layout

\begin_layout Standard
With the gained information the minimization problem can be written as:
\begin_inset Formula 
\begin{equation}
\begin{array}{cc}
\min_{x_{e}} & \left\{ C(\underline{x})=\mathop{\sum_{e=1}^{N}}\left(E_{min}+\left(E_{0}-E_{min}\right)x_{e}^{p}\right)\underline{u_{e}}^{T}\underline{\underline{K_{e,0}}}\underline{u_{e}}\right\} \\
\text{subject to} & \sum_{e=1}^{N}x_{e}\leq v_{\text{frac}}\cdot N\\
 & 0\leq x_{e}\leq1
\end{array}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Mathematical and Numerical Obstacles
\begin_inset CommandInset label
LatexCommand label
name "subsec:Mathematical-and-numerical"

\end_inset


\end_layout

\begin_layout Standard
In this section numerical and mathematical problems, that can occur within
 a topology optimization, are presented.
\end_layout

\begin_layout Subsection
Mesh Dependency
\end_layout

\begin_layout Standard
Due to the fact that the design domain is discretized into a certain number
 of elements, also the result is dependent on that discretization.
 This can for one be improved by using smaller elements, but this may lead
 to a different structure as can be seen in the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "Meshdep"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Ideally the same structure should appear only with a more accurate structure
 of the optimization result.
 
\end_layout

\begin_layout Standard
There are different methods to avoid the mesh dependency.
 Although they all restrict the spacial distribution of the material in
 some way, the most commonly used methods are the filtering methods, where
 a filter is applied to either the sensitivities or the design variables
 within the optimization process.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Mesh_dep_ganzmodell.pdf
	width 70text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Parametrization of the design room.
 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Mesh_dep_grosseelem.pdf
	width 70text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Solution with discretization of 600 elements
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Mesh_dep_kleineelem.pdf
	width 70text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Solution with discretization of 5400 elements
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Mesh dependency of the of the optimization problems (
\begin_inset CommandInset citation
LatexCommand citealt
key "Sigmund1998"
literal "false"

\end_inset

).
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Meshdep"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Checkerboard Patterns
\end_layout

\begin_layout Standard
The result of a topology optimization may include structure with evenly
 distributed solid and void elements.
 This is called the checkerboard problem.
 Bad numerical modeling by the finite element method, which overestimates
 the stiffness of the structure, causes the checkerboard effect (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bendsoe2004"
literal "false"

\end_inset

).
 A so-called artificial stiffness is obtained and therefore the structure
 seems to have a high stiffness.
 In figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "Checkerboard"
plural "false"
caps "false"
noprefix "false"

\end_inset

 a structure with several checkerboard pattern is shown.
 Their typical checkerboard like distribution of the solid and void elements
 can be seen.
\end_layout

\begin_layout Standard
By using the filtering methods, which were mentioned in the previous section,
 this problem too can be avoided.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Ohne_sens_filter.pdf
	lyxscale 20
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Checkerboard effect shown with the Cantilever beam.
 The optimization was made with OC and 
\begin_inset Formula $v_{\text{frac}}=0.5$
\end_inset


\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Checkerboard"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Sensitivity Analysis
\end_layout

\begin_layout Standard
The topology optimization in this work is gradient based.
 This means that the gradients of the objective function as well as the
 constraint function are used to improve the structure in each iteration
 and eventually reach an optimum.
 To do this, the sensitivities have to be calculated in every iteration.
 Since the optimization problem in this work only has one objective function
 with many design variables, the best way to determine the gradients is
 by using the adjoint method.
 The derivative of the objective function can be determined by using the
 chain rule:
\begin_inset Formula 
\begin{equation}
\dfrac{dC}{d\underline{x}}=\dfrac{\delta C}{\delta\underline{x}}+\dfrac{\delta C}{\delta\underline{u}}\cdot\dfrac{\delta\underline{u}}{\delta\underline{x}}\quad.\label{eq:derivative comp}
\end{equation}

\end_inset

In order to get the derivative of displacement 
\begin_inset Formula $\dfrac{\delta\underline{u}}{\delta\underline{x}}$
\end_inset

 the statement from equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fku"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is used:
\begin_inset Formula 
\begin{equation}
\underline{F}=\underline{\underline{K}}\underline{u}\quad.
\end{equation}

\end_inset

The derivative of this equation is:
\begin_inset Formula 
\begin{equation}
\dfrac{\delta\underline{F}}{\delta\underline{x}}=\dfrac{\delta\underline{\underline{K}}}{\delta\underline{x}}\underline{u}+\underline{\underline{K}}\dfrac{\delta\underline{u}}{\delta\underline{x}}\quad.
\end{equation}

\end_inset

Thus, the derivative of the displacement results in:
\begin_inset Formula 
\begin{equation}
\dfrac{\delta\underline{u}}{\delta\underline{x}}=\underline{\underline{K}}⁻¹\left(\dfrac{\delta\underline{F}}{\delta\underline{x}}-\dfrac{\delta\underline{\underline{K}}}{\delta\underline{x}}\underline{u}\right)\quad.\label{eq:derivative disp}
\end{equation}

\end_inset

At this point it shall be noted that this is a self-adjoint system, which
 means the original problem can be solved with a different right-hand side
 (the so-called pseudo load vector).
 Normally the equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:derivative disp"
plural "false"
caps "false"
noprefix "false"

\end_inset

 would have to be solved in order to determine 
\begin_inset Formula $\dfrac{\delta\underline{u}}{\delta\underline{x}}$
\end_inset

.
 With this result the initial problem 
\begin_inset Formula $\dfrac{dC}{d\underline{x}}$
\end_inset

 can be solved.
 In this case a simplification can be made by implementing the equation
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:derivative disp"
plural "false"
caps "false"
noprefix "false"

\end_inset

 into the first problem, equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:derivative comp"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 This results into:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\dfrac{dC}{d\underline{x}}=\dfrac{\delta C}{\delta\underline{x}}+\dfrac{\delta C}{\delta\underline{u}}\underline{\underline{K}}⁻¹\left(\dfrac{\delta\underline{F}}{\delta\underline{x}}-\dfrac{\delta\underline{\underline{K}}}{\delta\underline{x}}\underline{u}\right)\quad.\label{eq:derivative_ganz}
\end{equation}

\end_inset

From equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ftu"
plural "false"
caps "false"
noprefix "false"

\end_inset

 it is known that:
\begin_inset Formula 
\begin{equation}
C(\underline{x})=\underline{F}^{T}\underline{u}\quad,
\end{equation}

\end_inset

and additionally it shall be noted that the objective function as well as
 the force do not necessarily rely on the density of the elements.
 With this information the equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:derivative_ganz"
plural "false"
caps "false"
noprefix "false"

\end_inset

 can be reduced to:
\begin_inset Formula 
\begin{equation}
\dfrac{dC}{d\underline{x}}=\underline{F}^{T}\underline{\underline{K}}⁻¹\left(-\dfrac{\delta\underline{\underline{K}}}{\delta\underline{x}}\underline{u}\right)\quad.
\end{equation}

\end_inset

By using equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fku"
plural "false"
caps "false"
noprefix "false"

\end_inset

 this can be further simplified to:
\begin_inset Formula 
\begin{equation}
\dfrac{dC}{d\underline{x}}=-\underline{u}^{T}\dfrac{\delta\underline{\underline{K}}}{\delta\underline{x}}\underline{u}\quad.
\end{equation}

\end_inset

Introducing the elemental modification from equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:modified simp"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:element compliance"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the sensitivity of every element can be obtained by:
\begin_inset Formula 
\begin{equation}
\dfrac{dC}{dx_{e}}=-p\cdot x_{e}^{p}\left(E_{min}+\left(E_{0}-E_{min}\right)\right)\underline{u_{e}}^{T}\underline{\underline{K_{e,0}}}\underline{u_{e}}\quad.
\end{equation}

\end_inset

It can be seen from this equation, that the sensitivities have a negative
 value.
 So every additional element decreases the objective function and therefore
 increases the global stiffness of the system.
\end_layout

\begin_layout Standard
It has to be noted that these sensitivities are only local information on
 the element level.
 This is a very useful property because it allows a straight forward paralleliza
tion (
\begin_inset CommandInset citation
LatexCommand citealt
key "Malfavon2016"
literal "false"

\end_inset

).
\end_layout

\begin_layout Section
Filtering Methods
\begin_inset CommandInset label
LatexCommand label
name "sec:Filtering-methods"

\end_inset


\end_layout

\begin_layout Standard
To avoid the complications in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Mathematical-and-numerical"
plural "false"
caps "false"
noprefix "false"

\end_inset

 filtering methods can be applied.
 The aim of these methods is to generate a structure without numerical and
 mathematical problems.
 This is achieved with mainly two types of filters: For one there is the
 sensitivity filter (
\begin_inset CommandInset citation
LatexCommand citealt
key "Sigmund1997"
literal "false"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand citealt
key "Sigmund1994"
literal "false"

\end_inset

) and the density filter (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bruns2001"
literal "false"

\end_inset

).
 These two filters can be used together with projection methods so that
 semi-dens areas and the checkerboard patterns can be avoided in the solution
 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Guest2004"
literal "false"

\end_inset

) .
\end_layout

\begin_layout Standard
In this chapter three types of filters are presented, even though mainly
 sensitivity filtering is used in this work.
\end_layout

\begin_layout Subsection
Sensitivity Filter
\end_layout

\begin_layout Standard
The main concept for the sensitivity filter is to evaluate the sensitivities
 around the given element.
 With this information the element sensitivity is changed so that elements
 with high surrounding sensitivities will be rewarded and those who have
 low gradients around them will be punished.
 This way it is possible to smooth the spatial density sensitivity distribution
 and therefore get a more black and white solution at the update of the
 densities.
\end_layout

\begin_layout Standard
This filtering is done by the weighted average of the surrounding gradients.
 An example of the filtering principle can be seen in the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "Filtering"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Depending on the filtering-radius, which can be set by the user, a certain
 number of neighbours is considered.
 Mathematically the filtering can be written as:
\begin_inset Formula 
\begin{equation}
\hat{\dfrac{dC}{dx_{e}}}=\left(\dfrac{\sum_{i\epsilon N_{e}}H_{ei}x_{i}\dfrac{dC}{dx_{e}}}{\max(\gamma,x_{e})\sum_{i\epsilon N_{e}}H_{ei}}\right)\quad.
\end{equation}

\end_inset

In this equation 
\begin_inset Formula $\hat{\dfrac{dC}{dx_{e}}}$
\end_inset

 is the filtered sensitivity.
 
\begin_inset Formula $N_{e}$
\end_inset

 represents the number of elements that are within the filtering-radius.
 The constant 
\begin_inset Formula $\gamma$
\end_inset

 is set to a low value in order to avoid a division by zero.
 
\begin_inset Formula $x_{i}$
\end_inset

 is the density of each surrounding element.
 Commonly a linear decaying function is used for the weighting factor 
\begin_inset Formula $H_{ei}$
\end_inset

 and can be calculated as follows (
\begin_inset CommandInset citation
LatexCommand citealt
key "Sigmund2007"
literal "false"

\end_inset

):
\begin_inset Formula 
\begin{equation}
H_{ei}=\max\left(0,r_{\min}-\text{dist}(i,e)\right)\quad.\label{eq:filtering}
\end{equation}

\end_inset

The radius 
\begin_inset Formula $r_{min}$
\end_inset

 is the user defined filtering radius.
 This radius is subtracted by the value of the distance from the center
 coordinate of the given element and the neighbour element.
 This means that the value of the weighting factor 
\begin_inset Formula $H_{ei}$
\end_inset

 decreases linearly with increasing distance between the elements.
 For elements outside the filtering radius, the weighting factor is equal
 to zero.
 In figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "Filtering"
plural "false"
caps "false"
noprefix "false"

\end_inset

 a visualization of the weighting factor can be seen.
 One can observe, of how the weighting factor reduces with further distance
 to the given element.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Weighting_factor.pdf
	lyxscale 20
	width 90text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical visualization of the weighting factor 
\begin_inset Formula $H_{ei}$
\end_inset

 with the parameters 
\begin_inset Formula $r_{\min}=5$
\end_inset

, 
\begin_inset Formula $e=85$
\end_inset

 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Reinisch2017"
literal "false"

\end_inset

).
 
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Filtering"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Density Filter
\end_layout

\begin_layout Standard
The filtering of the densities follows the same principle as the sensitivity
 filter.
 By using the weighting factor, the surrounding elements are determined.
 With the information about the density of the neighbour elements the density
 of the given element can be altered:
\begin_inset Formula 
\begin{equation}
\hat{x}_{e}=\left(\dfrac{\sum_{i\epsilon N_{e}}H_{ei}x_{i}}{\sum_{i\epsilon N_{e}}H_{ei}}\right)\quad.\label{eq:density_filter}
\end{equation}

\end_inset

The result is an updated design variable, which is affected by the variables
 of the surrounding elements.
 It should be noted that by applying the density filter the design variables
 lose their physical meaning (
\begin_inset CommandInset citation
LatexCommand citealt
key "Sigmund2007"
literal "false"

\end_inset

).
 The densities 
\begin_inset Formula $x_{e}$
\end_inset

 are replaced by the filtered densities 
\begin_inset Formula $\hat{x}_{e}$
\end_inset

 and therefore also the modified SIMP approach in equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:modified simp"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is changed with the filtered design variables.
\end_layout

\begin_layout Subsection
Grey Scale Filter
\end_layout

\begin_layout Standard
The grey scale filter is used for Optimization Criterion (OC).
 This non-linear approach by 
\noun on
Groenwold
\noun default
 and 
\noun on
Etman
\noun default
 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Groenwold2009"
literal "false"

\end_inset

), that is implemented in the update procedure of the densities in the OC
 optimization algorithm, is used to get a discrete black and white solution.
 The filter varies the exponent 
\begin_inset Formula $q$
\end_inset

 over the iterations 
\begin_inset Formula $j$
\end_inset

 in the update process and can so penalize the semi-dens variables:
\begin_inset Formula 
\begin{equation}
\begin{array}{cc}
q= & \begin{cases}
\begin{array}{c}
q=1\\
\min\left(q^{max},1.01q\right)
\end{array} & \begin{array}{cc}
\text{if} & j\le15\\
\text{if} & j>15
\end{array}\end{cases}\end{array}
\end{equation}

\end_inset

With this optional implementation solid-void elements dominate the outcome
 of the optimization.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "greyscale"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows an example, in which the filter was applied in the structure (b).
 It can be seen, that more elements with the design variable 
\begin_inset Formula $1$
\end_inset

 (dark red) are within the structure.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Grey_scale_filter_ohne.pdf
	width 48text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization without grey scale filter
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Grey_scale_filter_mit.pdf
	width 48text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization with grey scale filter
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Visualization of the grey scale filter.
 The Cantilever beam optimized without the grey scale filter (a) and with
 the grey scale filter (b).
 
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "greyscale"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Optimization Algorithm
\begin_inset CommandInset label
LatexCommand label
name "sec:Optimization-algorithm"

\end_inset


\end_layout

\begin_layout Standard
Different optimization algorithms can be used in order to update the densities
 and therefore solve the problem at hand.
 In this chapter two important optimization algorithms are reviewed.
 Both of these algorithms are implemented into the code.
\end_layout

\begin_layout Subsection
Optimization Criterion (OC)
\end_layout

\begin_layout Standard
Optimality Criteria (OC) is commonly used for optimization problems with
 only one constraint (
\begin_inset CommandInset citation
LatexCommand citealt
key "Aage2015"
literal "false"

\end_inset

).
 
\end_layout

\begin_layout Standard
As in all topology optimization methods, this algorithm searches iterativly
 for the optimum design variable value for each element.
 To do so, the Lagrangian multiplier 
\begin_inset Formula $\lambda$
\end_inset

 is introduced and linked to the volume fraction of the problem at hand.
 Based on the criteria in equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:update oc"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the design variable is then updated.
 Mathematically the update procedure can be written as (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bendsoee1995"
literal "false"

\end_inset

):
\begin_inset Formula 
\begin{equation}
x_{e}=\begin{cases}
\begin{array}{c}
\max\left(0,x_{e}-m\right)\\
\min\left(0,x_{e}+m\right)\\
x_{e}B_{e}^{\eta}
\end{array} & \begin{array}{cc}
\text{if} & x_{e}B_{e}^{\eta}\le\,\max\left(0,x_{e}-m\right)\\
\text{if} & x_{e}B_{e}^{\eta}\le\,\min\left(1,x_{e}-m\right)\\
\text{otherwise}
\end{array}\end{cases}\quad.\label{eq:update oc}
\end{equation}

\end_inset

The tuning parameters 
\begin_inset Formula $\eta$
\end_inset

 and 
\begin_inset Formula $m$
\end_inset

 are set to the values 
\begin_inset Formula $0.5$
\end_inset

 and 
\begin_inset Formula $0.2$
\end_inset

.
 The constant 
\begin_inset Formula $m$
\end_inset

 is called move limit and limits the change of the design variable in one
 iteration.
 For numerical damping purposes of the optimality condition 
\begin_inset Formula $\eta$
\end_inset

 is introduced.
 The optimality condition is given as:
\begin_inset Formula 
\begin{equation}
B_{e}=\dfrac{-\dfrac{dC}{dx_{e}}}{\lambda\dfrac{dg}{dx_{e}}}\quad,
\end{equation}

\end_inset

where 
\begin_inset Formula $-\dfrac{dC}{dx_{e}}$
\end_inset

 is the compliance sensitivity and 
\begin_inset Formula $\dfrac{dg}{dx_{e}}$
\end_inset

 the constraint function sensitivity.
 The Lagrangian multiplier 
\begin_inset Formula $\lambda$
\end_inset

 is updated every iteration, so that the volume constraint is satisfied.
 This is done by implementing a bisection algorithm.
 This means that an upper and a lower bound is set and the difference between
 the two bounds is divided by 2.
 This is done every iteration until the constraint function of equation
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:constrain function"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is satisfied (
\begin_inset CommandInset citation
LatexCommand citealt
key "Gonzalez2015"
literal "false"

\end_inset

).
\end_layout

\begin_layout Subsection
Method of Moving Asymptotes (MMA)
\end_layout

\begin_layout Standard
The second optimization algorithm is the Method of Moving Asymptotes (MMA).
 MMA is a so-called dual method, which allows to solve problems with more
 than just one constraint.
 In order to use the dual method, the optimization problem has to be separable
 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Harzheim2014"
literal "false"

\end_inset

).
\end_layout

\begin_layout Standard
Separability can be achieved by using sequential approximate optimization
 algorithms.
 With the implementation of these algorithms the objective function and
 the constraints can be approximated by separable functions.
 The MMA approach introduced by 
\noun on
Svanberg
\noun default
 is used in this work (
\begin_inset CommandInset citation
LatexCommand citealt
key "Svanberg1987"
literal "false"

\end_inset

).
\end_layout

\begin_layout Standard
Much like the OC algorithm, also MMA is a gradient-based optimization algorithm.
 The optimization problem at hand is approximated locally with a convex
 separable subproblem and subsequently solved with dual methods.
 The approximation is made based on the sensitivities of the given element
 
\begin_inset Formula $i$
\end_inset

 in the iteration 
\begin_inset Formula $j$
\end_inset

, but also additional parameters like the 
\begin_inset Quotes eld
\end_inset

moving asymptotes
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $U_{i}^{j}$
\end_inset

 and 
\begin_inset Formula $L_{i}^{j}$
\end_inset

 are updated with every iteration, based on information of previous optimization
s.
 
\end_layout

\begin_layout Standard
The following implementation of the MMA algorithm is based on the work of
 
\noun on
Svanberg
\noun default
 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Svanberg2007"
literal "false"

\end_inset

).
 In every iteration 
\begin_inset Formula $j$
\end_inset

 the approximation of the objective function 
\begin_inset Formula $C(\underline{x})$
\end_inset

 can be written as:
\begin_inset Formula 
\begin{equation}
C\left(\underline{x}\right)\approx C\left(\underline{x}^{j}\right)+\sum_{i=1}^{n}\left(\dfrac{r_{i}^{j}}{U_{i}^{j}-x_{i}}+\dfrac{s_{i}^{j}}{x_{i}-L_{i}^{j}}\right)
\end{equation}

\end_inset

With 
\begin_inset Formula $x_{i}$
\end_inset

 as the design variables.
 
\begin_inset Formula $r_{i}$
\end_inset

 and 
\begin_inset Formula $s_{i}$
\end_inset

 can be determined with the gradient information of the given element as
 well as the upper and lower asypmtotes 
\begin_inset Formula $U_{i}^{j}$
\end_inset

 and 
\begin_inset Formula $L_{i}^{j}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
r_{i}^{j}=\left(U_{i}^{j}-x_{i}^{j}\right)^{2}\left(1.001\left(\dfrac{dC}{dx_{i}}\left(\underline{x}^{j}\right)\right)^{+}+0.001\left(\dfrac{dC}{dx_{i}}\left(\underline{x}^{j}\right)\right)^{-}+\dfrac{10^{-5}}{x_{i}^{\max}-x_{i}^{\min}}\right)\quad,
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
s_{i}^{j}=\left(x_{i}^{j}-L_{i}^{j}\right)^{2}\left(0.001\left(\dfrac{dC}{dx_{i}}\left(\underline{x}^{j}\right)\right)^{+}+1.001\left(\dfrac{dC}{dx_{i}}\left(\underline{x}^{j}\right)\right)^{-}+\dfrac{10^{-5}}{x_{i}^{\max}-x_{i}^{\min}}\right)\quad.
\end{equation}

\end_inset

In this declaration the choice of the first and second value within the
 brackets is determined by:
\begin_inset Formula 
\begin{equation}
\begin{array}{c}
\left(\dfrac{dC}{dx_{i}}\left(\underline{x}^{j}\right)\right)^{+}=\max\left(\dfrac{dC}{dx_{i}}\left(\underline{x}^{j}\right),0\right)\\
\left(\dfrac{dC}{dx_{i}}\left(\underline{x}^{j}\right)\right)^{-}=\max\left(-\dfrac{dC}{dx_{i}}\left(\underline{x}^{j}\right),0\right)
\end{array}\quad.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The values 
\begin_inset Formula $x_{i}^{\max}$
\end_inset

 and 
\begin_inset Formula $x_{i}^{\min}$
\end_inset

 are determined in every iteration by:
\begin_inset Formula 
\begin{equation}
\begin{array}{c}
x_{i}^{\max}=\min\left(x_{\max},x_{i}^{j}+m\right)\\
x_{i}^{\min}=\max\left(x_{\min},x_{i}^{j}-m\right)
\end{array}\quad.\label{eq:x_max_x_min}
\end{equation}

\end_inset

With 
\begin_inset Formula $x_{\max}$
\end_inset

 and 
\begin_inset Formula $x_{\min}$
\end_inset

 being the maximum and minimum value of the design variable, which is in
 the case of the topology optimization 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $0$
\end_inset

.
 The constant 
\begin_inset Formula $m$
\end_inset

 represents the move limit, limiting the possible change of the design variable.
\end_layout

\begin_layout Standard
The values 
\begin_inset Formula $L$
\end_inset

 and 
\begin_inset Formula $U$
\end_inset

 represent the lower and upper asymptotes.
 These are the limits in which the variable can move in order to optimize
 the problem.
 Furthermore, the limits are moved too in order to reach a better convergence
 behavior.
 The modification of the asymptotes in the first two iterations, where there
 is no information about the previous design variables, are:
\begin_inset Formula 
\begin{equation}
\begin{array}{c}
L_{i}^{j}=x_{i}^{j}-0.5\left(x_{i}^{\max}-x_{i}^{\min}\right)\quad,\\
U_{i}^{j}=x_{i}^{j}+0.5\left(x_{i}^{\max}-x_{i}^{\min}\right)\quad.
\end{array}\label{eq:upper_and_lower_asyp_12}
\end{equation}

\end_inset

In the iterations with 
\begin_inset Formula $j>2$
\end_inset

 the asymptotes are varied by the following declaration:
\begin_inset Formula 
\begin{equation}
\begin{array}{c}
L_{i}^{j}=x_{i}^{j}-\gamma_{i}^{j}\left(x_{i}^{j-1}-L_{i}^{j-1}\right)\quad,\\
U_{i}^{j}=x_{i}^{j}+\gamma_{i}^{j}\left(U_{i}^{j-1}-x_{i}^{j-1}\right)\quad,
\end{array}\label{eq:eq:upper_and_lower_asyp_3}
\end{equation}

\end_inset

where
\begin_inset Formula 
\begin{equation}
\begin{array}{cc}
\gamma_{i}^{j} & \begin{cases}
\begin{array}{ccc}
0.7 & \text{if} & \left(x_{i}^{j}-x_{i}^{j-1}\right)\left(x_{i}^{j-1}-x_{i}^{j-2}\right)<0\\
1.2 & \text{if} & \left(x_{i}^{j}-x_{i}^{j-1}\right)\left(x_{i}^{j-1}-x_{i}^{j-2}\right)>0\\
1 & \text{if} & \left(x_{i}^{j}-x_{i}^{j-1}\right)\left(x_{i}^{j-1}-x_{i}^{j-2}\right)=0
\end{array}\quad.\end{cases}\end{array}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
With this approach the limits are either tightened or widened, depending
 on how the design variable changed from the previous iteration to the given
 iteration 
\begin_inset Formula $x_{i}^{j}-x_{i}^{j-1}$
\end_inset

 and the same is done for the iterations before that: 
\begin_inset Formula $x_{i}^{j-1}-x_{i}^{j-2}$
\end_inset

.
 Should the gradients of those two iterations be in the same direction,
 the asymptotes are widened, should they have values that have a different
 sign the asymptotes are narrowed.
 
\end_layout

\begin_layout Standard
With this implementation the convergence can be stabilized if oscillations
 should occur, otherwise the solving process is accelerated.
\end_layout

\begin_layout Chapter
Open-Source Topology Optimization Software
\end_layout

\begin_layout Standard
In the year 2001 
\noun on
Sigmund
\noun default
 published an open-source topology optimization code written in Matlab.
 The intention behind the project was of educational nature (
\begin_inset CommandInset citation
LatexCommand citealt
key "Sigmund2001"
literal "false"

\end_inset

).
 In order to get an inside and a simple introduction to topology optimization
 the code 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top99
\end_layout

\end_inset

, an optimization tool with 99 lines of code, was published.
 It already had a few implementations which were discussed in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Fundamentals-of-Topology"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 The code consist of a simple compliance minimization with a volume constraint.
 By solving a simple Cantilever beam the optimal material distribution within
 the design domain is obtained.
 The code is still available for educational purposes.
 
\end_layout

\begin_layout Standard
Ten years later in 2011 an updated version of this code was released.
 The new code was named 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top88
\end_layout

\end_inset

, because the application was reduced to 88 lines of code.
 New was, that a high efficient pre-allocating array function and vectorised
 loops were implemented (
\begin_inset CommandInset citation
LatexCommand citealt
key "Andreassen2011"
literal "false"

\end_inset

).
 Furthermore, this code had a new filtering method included.
 The application was also available as a mobile version under the name 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

TopOpt
\end_layout

\end_inset

.
 Even though this code is able to calculate the equation using direct solvers
 and 4-noded elements, the code has several limitations.
 For instance setting boundary conditions or implementing multiple loads
 seem to cause significant problems.
 Since the code was again intended for educational purposes, the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top88
\end_layout

\end_inset

 is not able to solve larger and more complex problems.
\end_layout

\begin_layout Standard
In 2014 
\noun on
Tovar
\noun default
 and 
\noun on
Liu
\noun default
 developed a Topology optimization application for 3D structures in Matlab
 called 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top3d
\end_layout

\end_inset

 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Liu2014"
literal "false"

\end_inset

).
 Also this code was intended for students and newcomers in the field of
 topology optimization.
 The 169 line code consists of a finite element analysis, sensitivity analysis,
 sensitivity and density filtering.
 The optimization is done by the OC algorithm.
 Very promising though is the fact that the authors promise an easy implementati
on of the MMA optimization method.
 Additionally, multiple loads and a variety of boundary conditions can be
 simulated.
 According to the author, the code is about 30 times faster than traditionally
 used direct solvers at that time.
 
\end_layout

\begin_layout Standard
These three codes are only a few examples of many open-source codes, which
 were developed over the years (
\begin_inset CommandInset citation
LatexCommand citealt
key "Hunter2009,Talischi2012,Aage2015"
literal "false"

\end_inset

).
\end_layout

\begin_layout Section

\noun on
Kratos
\noun default
 - Open-Source framework
\begin_inset CommandInset label
LatexCommand label
name "sec:Kratos---Open-Source"

\end_inset


\end_layout

\begin_layout Standard

\noun on
Kratos
\noun default
 is an open-source framework for solving engineering problems with numerical
 methods.
 It is of great interest to 
\noun on
Kratos
\noun default
 developers and the community to simplify the development of new numerical
 methods.
 The main programming language is C++, which allows modularity and high
 performance.
 Various problem-types can be solved using 
\noun on
Kratos
\noun default
: structural analysis, fluid dynamics, thermal problems and more.
 The framework is structed as follows.
 The basic tools (database, linear algebra, search structures, etc.) are
 implemented in the so-called 
\begin_inset Quotes eld
\end_inset

core
\begin_inset Quotes erd
\end_inset

.
 With the tools different 
\begin_inset Quotes eld
\end_inset

applications
\begin_inset Quotes erd
\end_inset

 can be formed, extended or changed.
 Therefore implementing new problem types and applications to solve them,
 can be done without further changes in the 
\begin_inset Quotes eld
\end_inset

core
\begin_inset Quotes erd
\end_inset

 of the software.
\end_layout

\begin_layout Standard
An additional advantage of 
\noun on
Kratos
\noun default
 is the use of two different layers: Python and C++.
 This is realized by using Python as an user interface, where top-level
 process can be set and settings for the simulation are changed easily.
 Because Python does not need any compiling in order to work, process settings
 and parameters are more readable and most importantly the variations of
 such is less time consuming and less complicated.
 
\end_layout

\begin_layout Standard
Due to the fact that interpreted languages (needs no compiling) like Python
 are less efficient than compiled languages, the computational task is done
 by the second layer written in C++.
 In order to make this work, Python and C++ are linked by a corresponding
 interface.
\end_layout

\begin_layout Standard

\noun on
Kratos
\noun default
 offers the opportunity to use HPC.
 Additionally a full parallelization is possible due to the OpenMP and MPI.
 With the straight forward parallelization, 
\noun on
Kratos
\noun default
 is very attractive in the matter of implementing new applications.
\end_layout

\begin_layout Section
Topology Optimization in 
\noun on
Kratos
\end_layout

\begin_layout Standard
In the year 2015 a large scale-open source topology optimization application
 was introduced by 
\noun on
Gonzales
\noun default
 in 
\noun on
Kratos
\noun default
 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Gonzalez2015"
literal "false"

\end_inset

).
 Due to the advantages mentioned in the previous section, an application
 for topology optimization seemed to be an interesting project.
 The TopOpt Application was designed and implemented in 
\noun on
Kratos
\noun default
.
 
\begin_inset Newline newline
\end_inset

Gonzales published a new code, which had several abilities that were not
 included in open-source topology optimization before.
 Some of those where:
\end_layout

\begin_layout Itemize
3D analysis tool using arbitrary hexahedral elements.
\end_layout

\begin_layout Itemize
Active and passive elements.
\end_layout

\begin_layout Itemize
Introducing non-restricted geometries without dependency on domain, shape
 or size.
\end_layout

\begin_layout Itemize
Continuation strategy to avoid local minima in the early iterations (for
 more information about this see (
\begin_inset CommandInset citation
LatexCommand citealt
key "Gonzalez2015"
literal "false"

\end_inset

)).
\end_layout

\begin_layout Itemize
The opportunity to work with multiple load and boundary conditions.
\end_layout

\begin_layout Itemize
Implementation of filtering methods like sensitivity filter and grey scale
 filter.
\end_layout

\begin_layout Standard
Even though the application was efficient, minimizing the compliance of
 the given structure and simultaneously remaining inside the volume constraint,
 one major problem as within the code.
 As mentioned in the chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Kratos---Open-Source"
plural "false"
caps "false"
noprefix "false"

\end_inset

, 
\noun on
Kratos
\noun default
 consists of the core and the applications.
 The applications are using the needed tools from the core.
 The Topology Optimization Application (TopOpt) was depending on the Solid
 Mechanics Application of 
\noun on
Kratos
\noun default
.
 The code was structured by using functions and scripts from Solid Mechanics
 Application.Therefore the next goal was to make the TopOpt more independent
 from Solid Mechanics Application.
\end_layout

\begin_layout Standard
In 2016 the Topology Optimization Application was extended by 
\noun on
Malfavon
\noun default
 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Malfavon2016"
literal "false"

\end_inset

).
 The application was implemented as an independent application in 
\noun on
Kratos
\noun default
.
 TopOpt was still based on Solid Mechanics Application.
 But elements, utilities and functions were written for the application
 in order to get independence in 
\noun on
Kratos
\noun default
.
 The extensions of the code were: 
\end_layout

\begin_layout Itemize
Implementation of tetrahedral elements.
\end_layout

\begin_layout Itemize
Parameters and equation were adapted to the new elements.
\end_layout

\begin_layout Itemize
Different strategy for the computation of sensitivities and to get the element
 information from the FE analysis.
\end_layout

\begin_layout Itemize
Utilities and functions written in order to get a more independent application.
\end_layout

\begin_layout Itemize
A restart file was introduced.
 In this case an additional .mdpa file is written by the code in order to
 get additional information in the process of optimization.
 The user can choose the number of iterations after which such a file is
 printed.
\end_layout

\begin_layout Itemize
The user interface was changed.
\end_layout

\begin_layout Standard
With the new elements the implementation of the SIMP approach had to be
 changed.
 This was done by introducing a local residual approach.
 By doing so, the implementation effort was reduced and the opportunity
 for parallelization was a result.
 
\end_layout

\begin_layout Subsection
Topology Optimization Application
\end_layout

\begin_layout Standard
To understand the new implementations of the code made within this thesis,
 the old code is presented.
 This is done by introducing the different working layers and function scripts.
 This shall make it easier to understand the implementations and how they
 work in the code.
\end_layout

\begin_layout Standard
The Topology Optimization Application was developed according to the 
\noun on
Kratos
\noun default
 framework.
 As mentioned before, the code is written in two programming languages:
 Python and C++.
 Python is used to provide an easier environment and to make the process
 of the Application more readable.
 C++ on the other hand is used to provide a higher performance, low-level
 memory manipulation and a sufficient flexibility in large design domains.
\end_layout

\begin_layout Standard
In order to understand the code and to follow the process flow, a step by
 step flow chart of the optimization process can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "Optimization flowchart"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 For the optimization process to start a initial design is provided.
 With this model a FEA is performed.
 Building on that the objective function and the volume fraction of the
 current model are determined for every element.
 This is followed by the calculation of the gradients for both design variable
 and constraint function.
 The resulting sensitivities are filtered by the sensitivity filter.
 Based on the gained information, the optimization algorithm is launched
 and the design variable is updated.
 The process is repeated until the objective function change in the iteration
 is below a certain value, which is set by the user.
 In the given figure the density filter is implemented too, as it shows
 the optimization process of the new Topology Optimization Application.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/philipp/Dokumente/Semesterarbeit/Flowchart.pdf
	lyxscale 20
	width 90text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Flowchart of the optimization process.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Optimization flowchart"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
To initiate the optimization process the Python script 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

run_TopOpt.py
\end_layout

\end_inset

 is called.
 This script acts as the main part of the simulation.
 The model is called by using a 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

.mdpa
\end_layout

\end_inset

 file, the conditions of the model are saved in a 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

.json
\end_layout

\end_inset

 file and are applied by calling the file.
 Additionally a Python-file with the optimization parameters is part of
 the process.
 In order to start a topology optimization following scripts are needed:
\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

run_TopOpt.py
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

OptimizationParameters.py
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

Model.mdpa
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

ProjectParameters.json
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/philipp/Dokumente/Semesterarbeit/Bilder_Ausarbeitung/Python_scripts.pdf
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Python scripts and their main functions.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "pythonscripts"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "pythonscripts"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the needed Python scripts in order to run the simulation are shown.
 For the user only two of those are of importance: The 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

run_TopOpt.py
\end_layout

\end_inset

 file, which calls the FE analysis and initializes the optimization procedure
 in every iteration.
 Also the optimizer is constructed in this file and the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

topology_optimization_factory.py
\end_layout

\end_inset

 is called by the code.
 The second user defined file, the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

OptimizationParameters.py
\end_layout

\end_inset

, is included in the optimization by the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

topology_optimization_factory.py
\end_layout

\end_inset

.
 By calling the constructed optimizer the optimization process in launched.
 This is followed by an adjusted FEA of the structure.
 The following steps are performed:
\end_layout

\begin_layout Itemize
Structural problem is solved to get the displacement vector 
\begin_inset Formula $\underline{u}$
\end_inset

.
\end_layout

\begin_layout Itemize
Objective function values are determined and saved, based on the displacement
 
\begin_inset Formula $\underline{u}$
\end_inset

.
\end_layout

\begin_layout Itemize
The constraint value is calculated.
\end_layout

\begin_layout Itemize
The sensitivities of the objective function are called.
\end_layout

\begin_layout Itemize
The sensitivities of the constraint function are called.
\end_layout

\begin_layout Standard
The optimization runs through these steps in every iteration, and saves
 the sensitivities and objective function values inside the element.
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

OptimizationParameters.py
\end_layout

\end_inset

 is the script where the user can adjust the parameters for the topology
 optimization.
 The script contains: the properties of the design variables, the filtering
 options, which optimization algorithms is used and the convergence criteria
 as well as the maximum number of iterations.
 Additionally the response functions are defined by assigning objective
 function and constraint function.
 Furthermore the post-processing settings are implemented in this Python
 script, which consist of the writing of the restart file as well as the
 output-configurations.
\end_layout

\begin_layout Standard
Within the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

.mdpa
\end_layout

\end_inset

 file the elements are defined.
 The type of elements used for the simulation and the coordinates where
 each element finds its place.
 Additionally the volumes, surfaces or points for the boundary conditions
 and loads are defined.
 The 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

ProjectParameters.json
\end_layout

\end_inset

 on the other hand has the information about the boundary conditions and
 loads itself.
 Also the settings for the FE solver are saved within the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

.json
\end_layout

\end_inset

 file.
\end_layout

\begin_layout Standard
In order to understand the optimization process and the function within
 it, the C++ layer has to be observed.
 The code, while running through the Python code in 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

topology_optimization_factory.py
\end_layout

\end_inset

, calls the different functions which are defined as C++ scripts in the
 application.
 The most important scripts for the optimization process are:
\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

residualbased_incrementalupdate_static_simp_scheme.h
\end_layout

\end_inset

:
\begin_inset Newline newline
\end_inset

The script updates the global stiffness matrix of the model in order to
 calculate the new displacement vector 
\begin_inset Formula $\mathbf{\underline{\mathrm{u}}}$
\end_inset

 in the FEA.
\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

sturctural_response_function_utilities.h
\end_layout

\end_inset

:
\begin_inset Newline newline
\end_inset

This script calls every element to get its objective variable and the constraint
 variable.
 These get summed up in order to get the objective function and the volume
 fraction.
\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

structure_adjoint_sensitivity_strategy.h
\end_layout

\end_inset

:
\begin_inset Newline newline
\end_inset

This script calls every element and launches the calculation of the sensitivitie
s for the objective variable as well as the constraint function.
\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

small_displacement_simp_element.cpp
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

This script contains the actual calculation of the sensitivities, objective
 function and constraint function.
 
\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

topology_filtering_utilities.h
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

Within this script the sensitivities are filtered.
\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

topology_updating_utilities.h
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

To execute the update of the design variable this script is used.
\end_layout

\begin_layout Standard
The figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "c++functions"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows the different scripts with the functions they contain (although the
 new functions are already implemented).
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/philipp/Dokumente/Semesterarbeit/Bilder_Ausarbeitung/header_scripts.pdf
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
C++ scripts with their implemented functions.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "c++functions"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
With the information in the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

ProjectParameters.json
\end_layout

\end_inset

 and 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

OptimizationParameters.py
\end_layout

\end_inset

 different output files are constructed, when a simulation was done successfully.
 Within this work the resulting files were written for the pre and post
 processing tool GiD.
 In these files, the distribution of the design variable, the displacement
 and the stress reaction within the structure are saved and can be observed
 in the post processing tool.
 
\end_layout

\begin_layout Standard
In addition, a post-processing tool is available in Topology Optimization
 Application.
 With this Python code, the design variables below a certain threshold (defined
 by the user) are deleted and a structure with the remaining elements is
 obtained.
 By reading the restart file, which is printed in the end of the simulation,
 and the information about the model within it, the Python file 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

run_TopOpt_PostProcessing.py
\end_layout

\end_inset

 can be launched in the terminal.
 The resulting structure can be observed in the post processing tool GiD.
 
\end_layout

\begin_layout Section
Introduction to the new Topology Optimization Application in 
\noun on
Kratos
\end_layout

\begin_layout Standard
The original code was stored in the 
\noun on
Kratos
\noun default
 Legacy and therefore not up to date with the current version of 
\noun on
Kratos
\noun default
.
 To get the code even running new implementations were added and old ones
 had to be cut out.
 To do this, the 
\noun on
Kratos
\noun default
 version of October 2020 was used to develop the updated version of the
 optimization tool.
\end_layout

\begin_layout Standard
The code from 
\noun on
Gonzales
\noun default
 and 
\noun on
Malfavon
\noun default
 was based on the Solid Mechanics Application.
 The new version of the code would be based on the Structural Mechanics
 Application.
 To do so, all dependencies of the the Solid Mechanics Application were
 removed and replaced by the equivalent functions from Structural Mechanics
 Application.
 
\end_layout

\begin_layout Standard
Due to the fact that the applications in 
\noun on
Kratos
\noun default
 use a similar structure and similar elements only small parts had to be
 changed.
 Especially the includes of the scripts and functions needed to be updated
 to the equivalent ones of Structural Mechanics.
 One issue was to convert the used elements into elements readable for Structura
l Elements.
 Thus, the base of the used elements had to be changed.
 Up to this point the element base 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

small_displacement_element
\end_layout

\end_inset

 from Solid Mechanics was used, now the elements constructed in the simulation
 and used by the Topology Optimization Application are based on the element
 type 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

 small_displacement
\end_layout

\end_inset

 from Structural Mechanics Application.
\end_layout

\begin_layout Standard
Additionally, the interface between Python and C++ had been changed since
 the code was last used.
 The original version used Boost as an interface between the two programming
 languages.
 But for C++ and Python to interact Pybind11 had to be implemented into
 the different scripts.
 
\end_layout

\begin_layout Standard
With these changes the code was able to be compiled and the opportunity
 was given to start improving the code as well as implementing new functions.
 
\end_layout

\begin_layout Subsection
Dependency of the Filtering Process from the Young's modulus
\begin_inset CommandInset label
LatexCommand label
name "subsec:Dependency-of-the"

\end_inset


\end_layout

\begin_layout Standard
In order to apply filtering methods, the elements surrounding the given
 element are considered.
 By using the filtering radius 
\begin_inset Formula $r_{\min}$
\end_inset

 the number of elements can be changed by the user.
 The elements inside the radius are called and their sensitivities or densities
 are determined.
 Additionally the distance from the given element to the neighbour element
 brings a weighting factor into the filtering (see equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:filtering"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "Filtering"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 In other codes like 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top99
\end_layout

\end_inset

, 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top88
\end_layout

\end_inset

 or 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top3d
\end_layout

\end_inset

 the filtering is done before the optimization process starts (
\begin_inset CommandInset citation
LatexCommand citealt
key "Sigmund2001,Andreassen2011,Liu2014"
literal "false"

\end_inset

).
 Due to the interaction of Python and C++ this is implemented differently
 inside the Topology Optimization Application: The filtering method is implement
ed directly inside the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

topology_filtering_utilities.h
\end_layout

\end_inset

.
 In order to execute the filter function, every element is called inside
 the script and their neighbours are checked for their densities or sensitivitie
s.
 
\end_layout

\begin_layout Standard
Although this solution seems to be very good, by running the process completely
 inside C++, which provides a faster computation of the task, there is a
 problem: The deformed model from the FEA was used for the filtering.
 This means that the elements are not in their original position.
 Therefore the filtering process is depending on the Young's modulus of
 the structure.
 While a large Young's modulus does not affect the filtering process, because
 the displacement of the structure is relatively small, a small Young's
 Modulus has a major impact on the the filter function.
 Due to the high displacement of the structure, the filtering radius 
\begin_inset Formula $r_{\min}$
\end_inset

 includes less elements.
 This means that less elements are considered and the resulting structure
 changes.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "deformed model"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is a representative visualization to show the difference between deformed
 and undeformed structure.
 It can bee seen, that with the use of the structure on the left hand side,
 the filter process is more accurate, especially when the displacement increases
 even further, which it does for models with a low Young's modulus.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Filter_problem.pdf
	lyxscale 20
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Comparing the undeformed and deformed model.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "deformed model"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
This problem was solved by changing the center coordinates of the elements.
 The displacement of every element was added to their center coordinates,
 in order to get a undeformed model.
 This means the filter is applied to the non-deformed model and the surrounding
 elements can be considered as it is intended.
 By saving the center coordinates in a so-called tree and then adding the
 displacement inside the program, the model itself is not changed and can
 be used further.
 The tree is build and deleted in every iteration.
 This leaves room for improvements, in order to avoid building the tree
 in every iteration.
\end_layout

\begin_layout Subsection
Implementation of the Density Filter
\end_layout

\begin_layout Standard
The density filter was implemented equivalent to the sensitivity filter.
 As can be seen in equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:density_filter"
plural "false"
caps "false"
noprefix "false"

\end_inset

, the weighting function is also needed with the density filter.
 Therefore the updated filtering process, which was discussed in the previous
 section, was also included into this function.
 The addition to the code was included as follows: By calling the function
 a tree (as described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Dependency-of-the"
plural "false"
caps "false"
noprefix "false"

\end_inset

) is created and the filtering radius 
\begin_inset Formula $r_{\min}$
\end_inset

 the surrounding elements are examined.
 The densities of the neighbour elements are saved within the tree.
 With the gained information and the weighting factor, the new density of
 the given element is calculated.
 The resulting design variable is then saved within the element and is used
 for the next iteration.
 This is implemented inside the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

topology_filtering_utilities.h
\end_layout

\end_inset

 (see figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "c++functions"
plural "false"
caps "false"
noprefix "false"

\end_inset

) with the function name 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Flex URL
status open

\begin_layout Plain Layout

ApplyFilterDensity()
\end_layout

\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
.
 
\end_layout

\begin_layout Standard
The use of this filter is optional and it is up to the user to decide whether
 it is used or not.
 Is the filter used though, a less branched structure is anticipated.
 Less branched means in this case that the result is more concrete, that
 there are less additional branches within the structure.
 An example of this can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "density filter"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
The function is launched inside the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

topology_optimizer_factory.py
\end_layout

\end_inset

 right after the updating of the design variables.
 This filter can be activated by the user with an additional line in the
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

OptimizationParameters.py
\end_layout

\end_inset

:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex URL
status open

\begin_layout Plain Layout

density_filter = 
\begin_inset Quotes eld
\end_inset

density
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
The filter can be activated in both optimization algorithms OC or MMA.
 
\end_layout

\begin_layout Subsection
Implementation of MMA as Optimization Method
\end_layout

\begin_layout Standard
By introducing the Method of Moving Asymptotes (MMA) into the code, the
 user can now choose between two optimization algorithms.
 The MMA optimization algorithm is a well established method to optimize
 large-scale topology optimization problems (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bendsoe2004"
literal "false"

\end_inset

).
 Due to the fact that OC and MMA require the same types of computations,
 the algorithm is fairly easy to implement (
\begin_inset CommandInset citation
LatexCommand citealt
key "Bruns2001"
literal "false"

\end_inset

).
 
\end_layout

\begin_layout Standard
For this work a C++ MMA-script, written by Jérémie Dumas, was implemented.
 The code is available in the repository (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/jdumas/mma
\end_layout

\end_inset

), free to use and is based on the work of 
\noun on
Svanberg
\noun default
 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Svanberg2007"
literal "false"

\end_inset

).
 It can also be extended to a GCMMA, which is the globally convergent version
 of MMA.
 In this work though only MMA was implemented.
\end_layout

\begin_layout Standard
The MMA was placed into the code as follows: 
\end_layout

\begin_layout Standard
The new function 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
UpdateDensitiesUsingMMAMethod() was created within
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

topology_updating_utilities.h
\end_layout

\end_inset

.
 Inside the C++ script the optimization is executed.
 Because the MMA script by Jérémie Dumas was written to run entirely inside
 a C++ environment, the functions and the needed inputs had to be extended.
 In order to get the information of the previous iterations, which would
 be lost due to the change from C++ to Python within the optimization, several
 of the parameters are now saved within the element and provided to the
 function as additional information.
 With this change the updating of the design variable is calling the extended
 function:
\begin_inset Formula 
\begin{equation}
\text{Update}\left(\mathrm{\mathbf{\mathrm{\underline{x}}}},\text{\ensuremath{\underline{\dfrac{dC}{d\underline{x}}}}},g,\underline{\text{\text{\ensuremath{\dfrac{dg}{d\underline{x}}}}}},\underline{x}_{j}^{\min},\underline{x}_{j}^{\max},\underline{x}_{j-1},\underline{x}_{j-2},j,\underline{L}_{j},\underline{U}_{j}\right)\quad.
\end{equation}

\end_inset

In here some of the input values need to be in the form of a vector.
 Therefore vectors are created, by running through the elements, calling
 their properties and saving them inside the new vectors.
 The update is with 
\begin_inset Formula $\underline{x}$
\end_inset

 being the vector with the design variables, 
\begin_inset Formula $\ensuremath{\underline{\dfrac{dC}{d\underline{x}}}}$
\end_inset

 the vector with the corresponding sensitivities of the objective function.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $g$
\end_inset

 is the constraint function value of the given iteration and 
\begin_inset Formula $\underline{\text{\text{\ensuremath{\dfrac{dg}{d\underline{x}}}}}}$
\end_inset

 the sensitivity of the constraint function value.
 
\begin_inset Formula $\mathbf{\mathrm{\underline{x}}}_{\min}$
\end_inset

 and 
\begin_inset Formula $\mathbf{\mathrm{\underline{x}}}_{\max}$
\end_inset

 are the limits for the design variables set in every iteration.
 Additionally for the new implementation the design variables of the previous
 iterations are needed: 
\begin_inset Formula $\underline{x}_{j-1}$
\end_inset

 and 
\begin_inset Formula $\underline{x}_{j-2}$
\end_inset

.
 In order for the optimization algorithm to know the number of iteration
 which are already done, the current number of iteration 
\begin_inset Formula $j$
\end_inset

 is provided for the update.
 Finally the aysmptotes of the previous iteration are provided by 
\begin_inset Formula $\underline{L}_{j}$
\end_inset

 and 
\begin_inset Formula $\underline{U}_{j}$
\end_inset

.
 
\end_layout

\begin_layout Standard
The design variables and the objective function are saved inside the element
 and can therefore be called and saved within a vector.
 The constraint function value is given by:
\begin_inset Formula 
\begin{equation}
g=g_{comp}-v_{\text{frac}}\quad,\label{eq:constraint function value}
\end{equation}

\end_inset

with 
\begin_inset Formula $v_{frac}$
\end_inset

 being the volume fraction limit set by the user.
 
\begin_inset Formula $g_{comp}$
\end_inset

 is the volume fraction of the given iteration and defined by:
\begin_inset Formula 
\begin{equation}
g_{\text{comp}}=\sum_{i=1}^{n}x_{e}\quad.\label{eq:constraint function value derivative}
\end{equation}

\end_inset


\begin_inset Formula $x_{e}$
\end_inset

 are the design variables and 
\begin_inset Formula $N$
\end_inset

 the number of elements.
 As a result the sensitivity of the element of the constraint function value
 is defined as:
\begin_inset Formula 
\begin{equation}
\begin{array}{cc}
\dfrac{dg}{dx_{e}} & =\dfrac{d}{dx_{e}}\left(x_{e}\right)\\
 & =1
\end{array}\quad.
\end{equation}

\end_inset

With this the vector 
\begin_inset Formula $\underline{\text{\text{\ensuremath{\dfrac{dg}{d\underline{x}}}}}}$
\end_inset

 can be formed.
\end_layout

\begin_layout Standard
The upper and lower limit 
\begin_inset Formula $\underline{x}_{j}^{\max}$
\end_inset

 and 
\begin_inset Formula $\underline{x}_{j}^{\min}$
\end_inset

 are determined according to the equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:x_max_x_min"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 The number of iterations 
\begin_inset Formula $j$
\end_inset

 is used as an input variable in order for the updating function to properly
 calculate the asymptotes 
\begin_inset Formula $\underline{L}_{j}$
\end_inset

 and 
\begin_inset Formula $\underline{U}_{j}$
\end_inset

 (see equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:upper_and_lower_asyp_12"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eq:upper_and_lower_asyp_3"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 
\end_layout

\begin_layout Standard
After the updating is achieved, the new design variables are saved within
 the element.
 Additionally the design variables of the previous sections, as well as
 the asymptotes are saved within the element and can be called in the next
 iteration.
\end_layout

\begin_layout Standard
The introduced optimization algorithm uses the default parameters within
 the updating procedure, which are suggested by 
\noun on
Svanberg
\noun default
 to create and solve the sub-problem (
\begin_inset CommandInset citation
LatexCommand citealt
key "Svanberg2007"
literal "false"

\end_inset

).
\end_layout

\begin_layout Standard
Whether the OC algorithm or the MMA algorithm is used can be chosen by the
 user in the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

OptimizationParamters.py
\end_layout

\end_inset

 by writing:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex URL
status open

\begin_layout Plain Layout

optimization_algorithm = 
\begin_inset Quotes eld
\end_inset

MMA_algorithm
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

 or 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

\begin_inset Quotes eld
\end_inset

oc_algoritm
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Although the MMA algorithm was implemented properly, there is still a small
 problem, which was not solved within this work.
 The fact that the MMA script is initialized in every iteration could be
 a source of problem.
 This issue is further discussed in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Evaluation-of-themma"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Chapter
Topology Optimization Results
\end_layout

\begin_layout Standard
To investigate the new functions inside the code and their implementations,
 this chapter provides a comparison with the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top3d
\end_layout

\end_inset

 code from 
\noun on
Liu
\noun default
 and 
\noun on
Tovar
\noun default
 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Liu2014"
literal "false"

\end_inset

).
 Different examples are presented and evaluated in order to determine the
 diversities in the results among the new functions.
 Therefore a Cantilever Beam is introduced.
 The beam can be seen in figure (
\begin_inset CommandInset ref
LatexCommand ref
reference "model beam"
plural "false"
caps "false"
noprefix "false"

\end_inset

) and has the dimensions of 
\begin_inset Formula $60\text{x}20\text{x}4mm$
\end_inset

.
 For the following examples the beam is discretized into elements of the
 form 
\begin_inset Formula $1\text{x}1\text{x}1mm$
\end_inset

.
 This gives a total number of 4800 elements and 6408 nodes.
 The boundary conditions are as follows: The force is working onto the structure
 at the points in the front right corner.
 The beam itself is mounted onto a structure with the latter surface and
 thus no displacements in this area are allowed.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
scalebox{0.5}{
\end_layout

\begin_layout Plain Layout


\backslash
huge{
\end_layout

\begin_layout Plain Layout


\backslash
input{Bilder_Ausarbeitung/3DBeamCut.pgf}
\end_layout

\begin_layout Plain Layout

}}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Cantilever beam as benchmark model.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "model beam"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
This beam is also implemented as an example into the Topology Optimization
 Application in 
\noun on
Kratos
\noun default
.
 Two versions of this beam are available in the examples: For one example
 the hexahedral elements are taken, for the second one the elements are
 implemented as tetrahedral.
 
\end_layout

\begin_layout Section
Introduction of the Benchmark Code
\begin_inset CommandInset label
LatexCommand label
name "sec:Introduction-of-thebenchmark"

\end_inset


\end_layout

\begin_layout Standard
In order to compare the Topology Optimization application with an existing
 code, the Matlab code 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top3d
\end_layout

\end_inset

 is introduced.
 The code can be freely downloaded on the website 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.top3d.app/
\end_layout

\end_inset

.
 By comparing the results of the code, the new implementations within Topology
 Optimization Application are verified.
 
\end_layout

\begin_layout Standard
To optimize a structure in Matlab, the model is defined by the user by simply
 setting the values of either coordinate axis.
 Although this provides an easy and fast use of the code, more complicate
 structures can not be optimized with this application.
 For more information about the code see the work of 
\noun on
Liu
\noun default
 and 
\noun on
Tovar
\noun default
 (
\begin_inset CommandInset citation
LatexCommand citealt
key "Liu2014"
literal "false"

\end_inset

).
 In the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "Optimirung Matlab 3D"
plural "false"
caps "false"
noprefix "false"

\end_inset

 a 3D structure can be seen, which was optimized with 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top3d
\end_layout

\end_inset

.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/philipp/Dokumente/Semesterarbeit/Bilder_Ausarbeitung/Matlab_Model.pdf
	width 70text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization of the Cantilever beam with the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

top3d 
\end_layout

\end_inset

 code in Matlab.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Optimirung Matlab 3D"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
To have a comparability, the model inside the Matlab-code has the same dimension
s as the Cantilever beam from the examples in the Topology Optimization
 Application.
 The dimensions are: 
\begin_inset Formula $60x20x4mm$
\end_inset

.
 For both Matlab and Kratos the Young's modulus is set to 1.
 Additionally the boundary conditions in Matlab equivalent to the conditions
 of the example described in the introduction of this chapter.
 
\end_layout

\begin_layout Standard
For the simulations the parameters are set according to the values in table
 
\begin_inset CommandInset ref
LatexCommand ref
reference "parameter Matlab"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 It can be seen in this table that two different termination criteria are
 set in the codes.
 This is because the Matlab code uses the relative change of the design
 variable over the iterations as termination criterion.
 If the definition:
\begin_inset Formula 
\begin{equation}
\max\left(\parallel\underline{x}_{j}-\underline{x}_{j-1}\parallel\right)\quad,
\end{equation}

\end_inset

is below a certain threshold set by the user, the optimization process is
 stopped.
 In the Topology Optimization Application the relative change of the objective
 function is observed in order to determine whether the optimization should
 be stopped or continued.
\end_layout

\begin_layout Standard
When comparing the results, it has to be considered that the codes are using
 filtering and therefore the weighting function differently.
 In Matlab the detection of the neighbour elements and the calculation of
 the weighting function is done before the optimization process starts,
 whereas in 
\noun on
Kratos
\noun default
 this is done in every iteration step.
\end_layout

\begin_layout Standard
Also the maximum iterations in Matlab are recommended higher and therefore
 set to 
\begin_inset Formula $200$
\end_inset

, whereas in Kratos this is set to 
\begin_inset Formula $100$
\end_inset

.
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tolerance: 1e-4 for 
\noun on
Kratos 
\noun default
/ 0.01 for Matlab
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Penalty factor: 3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max.
 Iterations: 100/200
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Filter radius: 1.5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Volume Fraction: 0.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Grey Scale Filter: No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Young's Modulus: 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Continuation Strategy: No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Optimization Algorithm: oc_algorithm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Density Filter: No
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization parameters for the example of the Cantilever beam optimized
 with Topology Optimization Application and with Matlab.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "parameter Matlab"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Evaluation of the new Implementations
\end_layout

\begin_layout Standard
In this chapter new implemented functions are compared and evaluated.
 For the examples where the Matlab code is used, the parameters are set
 according to the values shown in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "parameter Matlab"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Before the presentation of the results it has to be mentioned that the
 Matlab simulations were made on a different computer as the ones made with
 
\noun on
Kratos
\noun default
.
 Additionally, it is important to know that the time consumption of the
 simulations with Topology Optimization Application are relatively high,
 because these were done with the
\noun on
 Kratos
\noun default
 debug version.
\end_layout

\begin_layout Standard
Both simulations use the same element size and hexahedral element structure.
 The result and the compliance change over the iterations as well as the
 number of iterations can be seen in figure (
\begin_inset CommandInset ref
LatexCommand ref
reference "optimized_matlab_kratos"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Matlab_OC_vergleich_Matlab.pdf
	width 48text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Cantilever beam optimized in Matlab
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Matlab_OC_vergleich_kratos.pdf
	width 48text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Cantilever beam optimized in Kratos
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparison of the optimization of a Cantilever beam using OC in Matlab (a)
 and Kratos (b).
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "optimized_matlab_kratos"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
From the figure (
\begin_inset CommandInset ref
LatexCommand ref
reference "optimized_matlab_kratos"
plural "false"
caps "false"
noprefix "false"

\end_inset

) it can be seen that the results from 
\noun on
Kratos 
\noun default
and Matlab are very similar.
 The differences can be explained with the different implementation of the
 termination criterion.
 In the table 
\begin_inset CommandInset ref
LatexCommand ref
reference "Tabelle Matlab OC"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "compliance_kratos_matlab"
plural "false"
caps "false"
noprefix "false"

\end_inset

 can be seen that the Topology Optimization Application only needs 
\begin_inset Formula $23$
\end_inset

 iterations for the optimization to stop.
 Whereas the Matlab code needs 
\begin_inset Formula $176$
\end_inset

 iterations.
 Although with the higher number of iterations, the compliance of the structure
 optimized in Matlab is lower than the compliance of the structure optimized
 in 
\noun on
Kratos
\noun default
.
 When comparing the time, the Matlab code is about 
\begin_inset Formula $8$
\end_inset

 times faster than the Kratos optimization.
 But this is due to the fact, that Kratos is still implemented as the debug
 version and therefore an optimization is expected to take significantly
 longer.
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Matlab
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\noun on
Kratos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of elements
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4800
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4800
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of nodes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6408
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6408
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of iterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
176
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time of solution [s]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
86
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
556
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compliance of optimized structure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1069
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1144
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Comparison between existing Matlab code top3d and the Topology Optimization
 Application
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Tabelle Matlab OC"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setlength
\backslash
figureheight{7.0cm}
\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figurewidth{10.0cm}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
input{Bilder_Ausarbeitung/Compliance_OC_Matlab.tex}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
The change of the compliance over the iterations.
 The plot in blue shows the change of the simulation in Matlab, the orange
 one the optimization in 
\noun on
Kratos
\noun default
.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "compliance_kratos_matlab"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Improvement of the Filtering Process
\end_layout

\begin_layout Standard
With the implementation of the improved filtering procedure, better results
 are expected for structures with a low Young's modulus.
 In the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "filtering problem"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the result of the simulation with the old, original version of Topology
 Optimization Application can be seen.
 This simulation was made with the same parameters as shown in the previous
 section in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "parameter Matlab"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "optimized_matlab_kratos"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 As discussed the filtering of the deformed structure could lead to checkerboard
 like patterns.
 This can be seen very good in the figure.
 Due to the deformed model, the function can not find any or only a few
 elements within the filtering radius 
\begin_inset Formula $r_{\min}$
\end_inset

 and therefore a structure that seems to not have been filtered is obtained.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Problem_filter.pdf
	lyxscale 20
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Result of the Topology Optimization Application, with a simulation of the
 cantilever beam and the filtering applied to the deformed model.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "filtering problem"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In table 
\begin_inset CommandInset ref
LatexCommand ref
reference "Tabelle filter problem"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the simulation results with the updated filter function and the simulation
 with the old implementation are compared.
 Comparing the results of the two filtering functions, the old one would
 seem better.
 The simulation with the deformed model needs less iterations in order for
 the objective function to converge.
 Therefore less time is needed for the optimization.
 Additionally the compliance of the structure is lower.
 But if the structural result in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "filtering problem"
plural "false"
caps "false"
noprefix "false"

\end_inset

, which is the optimized structure of this simulation, is considered, the
 reason for these improvements is clear: Artificial stiffness due to checkerboar
d patterns.
 This leads to a virtually high stiffness in the optimization.
 The structure, as can be seen in the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "filtering problem"
plural "false"
caps "false"
noprefix "false"

\end_inset

, is physically not reproducible and has therefore to be avoided.
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Old implementation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
New implementation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of elements
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4800
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4800
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of nodes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6408
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6408
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of iterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time of solution [s]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
506
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
556
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compliance of optimized structure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1082
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1144
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Comparison of Matlab and 
\noun on
Kratos
\noun default
 using the density filter.
 The parameters form table 
\begin_inset CommandInset ref
LatexCommand ref
reference "parameter Matlab"
plural "false"
caps "false"
noprefix "false"

\end_inset

 were used.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Tabelle filter problem"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Although the applied approach works, the filtering could be further improved.
 For example by implementing the filter before the optimization process,
 as it is done in the benchmark code.
 This would not only save computational time but also this would be done
 before the structural analysis and therefore the model does not have any
 displacements yet.
\end_layout

\begin_layout Standard
As simple as it sounds, this proved to be a bigger problem than anticipated
 because of the interaction of the C++ code and Python.
 Therefore the solution found within this work can be considered a satisfying
 solution.
\end_layout

\begin_layout Subsection
Evaluation of the Density Filter Implementation
\end_layout

\begin_layout Standard
The impact of the density filter onto the results will be over-viewed in
 this section.
 In order to activate the density filter the corresponding line in the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

OptimizationParameters.py
\end_layout

\end_inset

 is changed:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex URL
status open

\begin_layout Plain Layout

density_filter=
\begin_inset Quotes eld
\end_inset

density
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Should the character 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

\begin_inset Quotes eld
\end_inset

density
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

 be pronounced in a different way or incorrectly, the filtering function
 will be ignored during the optimization process.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Cantilever_density_Matlab.pdf
	width 48text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Cantilever beam optimized in Matlab with density filter
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Cantilever_density_gut.pdf
	width 48text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Cantilever beam optimized in Kratos with density filter
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization of the Cantilever beam with the density filter in Matlab (a)
 and in 
\noun on
Kratos
\noun default
 (b).
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "density filter"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "density filter"
plural "false"
caps "false"
noprefix "false"

\end_inset

 compares the optimization within Matlab and with 
\noun on
Kratos
\noun default
 using the density filter.
 In both results a less branched structure can be seen if they are compared
 with the structures in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "optimized_matlab_kratos"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Due to the the change of the structure, the compliance of both structures
 is higher than they are in the simulations without the density filter.
 Further it can be seen, that the compliance in the optimization with Kratos
 was reduced further than in the simulation with Matlab.
 By comparing the number of iterations, it can be observed, that 
\noun on
Kratos
\noun default
 needs only 
\begin_inset Formula $28$
\end_inset

 iterations while Matlab needs 
\begin_inset Formula $141$
\end_inset

.
 
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Matlab
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kratos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of elements
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4800
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4800
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of nodes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6408
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6408
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of iterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
141
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
28
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time of solution [s]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
52
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
673
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compliance of optimized structure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1274
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1247
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Comparison of the old filter function and the new filter function.
 The parameters form table 
\begin_inset CommandInset ref
LatexCommand ref
reference "parameter Matlab"
plural "false"
caps "false"
noprefix "false"

\end_inset

 were used.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Tabelle density filter"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "compliance_density_filter"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the optimization by Topology Optimization Application with and without
 the density filter is shown.
 It can be seen, that the change of compliance is similar in the beginning.
 With further iterations the results drift apart.
 In the end the optimization with the density filter needs more iterations
 than the one without the filter.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figureheight{7.0cm}
\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figurewidth{10.0cm}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
input{Bilder_Ausarbeitung/Compliance_OC_density.tex}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Change of compliance over the iterations using OC optimization algorithm.
 The optimization is done with and without density filter.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "compliance_density_filter"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Evaluation of the MMA Optimization Algorithm
\begin_inset CommandInset label
LatexCommand label
name "subsec:Evaluation-of-themma"

\end_inset


\end_layout

\begin_layout Standard
By introducing the MMA optimization method, the code offers more opportunities
 for further extensions.
 This chapter overviews and compares the MMA method with the existing OC
 method of the TopOpt Application.
 This is done by using the Cantilever Beam model, which was described in
 the introduction of this chapter.
 The parameters for both simulations can be seen in the table 
\begin_inset CommandInset ref
LatexCommand ref
reference "parameter MMA_oc"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tolerance: 1e-4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Penalty factor: 3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max.
 Iterations: 100
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Filter radius: 1.5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Volume Fraction: 0.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Grey Scale Filter: No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Young's Modulus: 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Continuation Strategy: No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Optimization Algorithm: MMA_algorithm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Density Filter: No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization parameters for the comparison of the MMA method and the OC
 method
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "parameter MMA_oc"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The results of the simulations can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "optimized_mma_oc_canitlever"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "Tabelle MMA und OC"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Additionally the change of the compliance of the two optimizations can
 be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "plot_mma_oc_cantilever"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MMA algorithm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OC algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of elements
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4800
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4800
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of nodes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6408
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6408
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of iterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
33
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time of solution [s]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
815
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
556
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compliance of optimized structure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1153
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1144
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Comparison of MMA and OC as optimization algorithm, by optimizing the Cantilever
 beam.
 The parameters form table 
\begin_inset CommandInset ref
LatexCommand ref
reference "parameter MMA_oc"
plural "false"
caps "false"
noprefix "false"

\end_inset

 were used.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Tabelle MMA und OC"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The structures from the optimizations have a high similarity.
 Even though the MMA algorithm needs more iterations, the compliance values
 of the optimizations are very close to each other.
 If the time is considered, it can be seen that optimization of the structure
 with the OC algorithm is faster than the optimization with MMA.
 Additionally the plot of the compliance over the time shows, that OC as
 an optimization algorithm converges faster compared to the MMA algorithm.
 This for one is because the design value gets updated in the first iterations
 without further information (see equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:x_max_x_min"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Only in the third iteration the updating process is improved with every
 iteration and therefore the code converges faster after that.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Matlab_OC_vergleich_kratos.pdf
	width 48text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Cantilever beam optimized with OC in 
\noun on
Kratos
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Cantilever_MMA_vergleich.pdf
	width 48text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Cantilever beam optimized with MMA in 
\noun on
Kratos
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization of the Cantilever beam with OC (a) and MMA (b) as optimization
 algorithms in 
\noun on
Kratos.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "optimized_mma_oc_canitlever"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figureheight{7.0cm}
\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figurewidth{10.0cm}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
input{Bilder_Ausarbeitung/Compliance_OC_MMA.tex}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Change of compliance over the iterations with OC and MMA as optimization
 algorithms for the benchmark example.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "plot_mma_oc_cantilever"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Description of the Topology Optimization on an Aerial Lift Pylon
\end_layout

\begin_layout Standard
To give an example of how the code could be used in the industry an aerial
 lift pylon will be optimized.
 In this section the pylon and its boundary conditions as well as the design
 domain of the pylon are defined.
\end_layout

\begin_layout Standard
Aerial lifts are considered one of the oldest means of transport (
\begin_inset CommandInset citation
LatexCommand citealt
key "2020"
literal "false"

\end_inset

).
 In steep and harsh environment the cable car is still one of the most common
 used transportation utility.
 With over 22000 installed machines all over the world, this mode of transportat
ion is still of importance.
 They are being used for transporting passengers as well as goods.
 With the cable car being a sustainable way of transport, their importance
 for urban transportation has increased in the last years (
\begin_inset CommandInset citation
LatexCommand citealt
key "2020"
literal "false"

\end_inset

).
 Some of the reasons why a cable car can be used as an urban way of transportati
on are the following:
\end_layout

\begin_layout Itemize
cable cars can be powered by electrical energy and can therefore reduce
 the production of carbon dioxide (given that the electricity is provided
 by renewable methods).
\end_layout

\begin_layout Itemize
Traffic inside cities could be reduced by using aerial lifts as a way of
 public transport.
 
\end_layout

\begin_layout Itemize
They are quite independent of the terrain where they are installed.
\end_layout

\begin_layout Itemize
There is no interaction between the cable car and other modes of transportation,
 which means no accidents with other transportation vehicles can occur.
\end_layout

\begin_layout Standard
Due to some of these reasons the idea of using cable cars as a public transporta
tion system is present in different cities all over the world.
 In some cities this was already done, sometimes partly (
\begin_inset CommandInset citation
LatexCommand citealt
key "Alshalalfah2012"
literal "false"

\end_inset

).
 
\end_layout

\begin_layout Standard
Although this seems like a good solution for public transport system, the
 construction of an aerial lift is a challenge and comes with high costs.
 Therefore the improvement of the different parts of the cable car as a
 project is an interesting subject.
 
\end_layout

\begin_layout Standard
Cable car systems normally consist of the following mechanical parts:
\end_layout

\begin_layout Itemize
Upper and lower station.
\end_layout

\begin_layout Itemize
One or more gondolas, depending on the type of aerial lift.
\end_layout

\begin_layout Itemize
One or more ropes, depending on the type of aerial lift.
\end_layout

\begin_layout Itemize
pylons along the line, if needed.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/philipp/Dokumente/Semesterarbeit/Bilder_Ausarbeitung/Bildschirmfoto vom 2021-05-07 21-17-34.png
	lyxscale 20
	width 80text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Pylon of a aerial lift as a tubular steel structure by
\noun on
 Leitner
\noun default
 (
\begin_inset CommandInset citation
LatexCommand citealt
key "2020"
literal "false"

\end_inset

).
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Seilbahnmast"

\end_inset


\end_layout

\end_inset

As an example from the industry and an example of how the code could be
 implemented in the industry a pylon is optimized.
 To do so the boundary conditions of the pylon have to be taken into account.
 Due to a collaboration with 
\noun on
Leitner
\noun default
 the occurring loads where given for a mono-cable gondola (
\begin_inset CommandInset citation
LatexCommand citealt
key "Leitner2021"
literal "false"

\end_inset

).
 With the given conditions a model was constructed.
\end_layout

\begin_layout Standard
The forces and moments onto the structure are given on the top of the pylon
 (see figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "kraft_moment_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

), where an additional structure is mounted (see figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "model_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 This additional structure is the horizontal steel structure, the so-called
 yoke, where the shoes or sheave assembly are mounted (see figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "model_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Onto the shoe or the assembly lies or runs the rope, depending on the type
 of aerial lift.
 The forces and momentum are given on the point, where the yoke is connected
 to the pylon.
 Therefore the constructed model only considers the pylon up to the point
 where the yoke is mounted.
\end_layout

\begin_layout Standard
In figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "model_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

 it is visualized how the pylon was modeled and how the model is connected
 to the reality.
 The height of the pylon was given from 
\noun on
Leitner
\noun default
 as 
\begin_inset Formula $47,8m$
\end_inset

.
 For the model a height of 
\begin_inset Formula $48m$
\end_inset

 was chosen.
 For the foundation of the pylon an assumption was made of the foundation
 surface to be 
\begin_inset Formula $12$
\end_inset

x
\begin_inset Formula $12m$
\end_inset

.
 This assumption was made for two reasons: The first reason was that the
 pylon is quite high for a mono-cable gondola system, therefore to provide
 enough stability, these measurements where chosen.
 The second reason was to give the optimization algorithm more space to
 develop the optimized structure.
 One might wonder, why the pylon is narrowed on the top.
 This was done, in order for the gondola to pass the pylon without any problems
 (see figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "model_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Model_Seilbahnmast_beschriftet.pdf
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Model of the aerial lift pylon.
 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Mesh_model_seilbahnmast.pdf
	scale 75

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Meshed quarter model of the pylon.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
The design domain (4) is shown in (a) with additional structures and parts
 of the pylon.
 The yoke (1), the shoes or sheave assembly (2) and the gondola (3) can
 be seen.
 In (b) the meshed design domain for the optimization is shown (mesh size
 = 
\begin_inset Formula $0.5m$
\end_inset

).
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "model_seilbahnmast"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\noun on
Leitner 
\noun default
provided the different load cases of the pylon.
 For the simulation in this work a fictional load-case was taken.
 For this the highest forces and highest moments are considered.
 The moments and forces result from:
\end_layout

\begin_layout Itemize
load of the cable car
\end_layout

\begin_layout Itemize
snow
\end_layout

\begin_layout Itemize
wind in the direction of the rope-way / perpendicular to the direction of
 the rope-way
\end_layout

\begin_layout Itemize
ice on the ropes
\end_layout

\begin_layout Itemize
dynamic effects
\end_layout

\begin_layout Itemize
tension and weight of the ropes
\end_layout

\begin_layout Standard
The moments and forces are applied on the top of the pylon (see figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "kraft_moment_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 The loads that are used can be seen in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "loads and forces"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Directions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Force
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Moment
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x-direction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $60kN$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $210kNm$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y-direction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $115kN$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $-18kNm$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z-direction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $200kN$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $-100kNm$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Forces and moments working on the top of the pylon.
 This is an assumed load-case.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "loads and forces"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this case only one load case is considered, which would result in a structure
, that is stronger on one side.
 Also this load case does not consider all the cases that can occur on the
 pylon.
 Depending on the way the aerial lift is used one of the rope sides can
 have higher loads.
 It has also a major affect on loads, considering which side the cable cars
 drive uphill and on which side downhill.
 Additionally, it is not known if the majority of the weight is transported
 downhill or uphill.
 Due to this uncertainties an assumption was made: In this work the pylon
 will be seen as a symmetrical building.
 Therefore only one quarter of the model can be taken for the simulation
 and with the symmetry the pylon can be constructed by mirroring the quarter
 model.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/philipp/Dokumente/Semesterarbeit/Bilder_Ausarbeitung/Kraft_moment_seilbahnmast.pdf
	scale 80

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Forces and moments applied on the structure.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "kraft_moment_seilbahnmast"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
For the simulation the model had to be discretized.
 This was done by hexahedral elements with the size of 
\begin_inset Formula $0,5m$
\end_inset

.
 With this element size, the model was divided into 
\begin_inset Formula $97152$
\end_inset

 elements and 
\begin_inset Formula $106225$
\end_inset

 nodes (see figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "model_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 
\end_layout

\begin_layout Section
Validation of the Implementations considering the Aerial Lift Pylon
\end_layout

\begin_layout Standard
To see a possible use of the Topology Optimization Application, the model
 of the aerial lift pylon was simulated in this section.
 
\end_layout

\begin_layout Standard
To not only show the Topology Optimization Application, but also the extension
 by the MMA algorithm, the simulation was done twice.
 The first time the pylon model was optimized using OC, whereas for the
 second optimization the MMA algorithm was used.
 In table 
\begin_inset CommandInset ref
LatexCommand ref
reference "Parameter_Stuetze"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the used optimization parameter can be seen.
 The assumption was made, that the pylon would fill 
\begin_inset Formula $0.15\%$
\end_inset

 of the developed model.
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tolerance: 1e-6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Penalty factor: 3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max.
 Iterations: 100
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Filter radius: 0.75
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Volume Fraction: 0.15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Grey Scale Filter: No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Young's Modulus: 210e+9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Continuation Strategy: No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Optimization Algorithm: MMA_algorithm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Density Filter: No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization parameters for the aerial lift pylon model.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Parameter_Stuetze"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Before the results of the optimization are shown, it has to be mentioned,
 that with the optimization using MMA a problem occurred.
 Within the optimization algorithm the constraint function value, as implemented
 by equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:constraint function value"
plural "false"
caps "false"
noprefix "false"

\end_inset

, was not able to keep the volume fraction of every iteration below the
 set volume fraction limit.
 Therefore the volume fraction increased with every iteration (see figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "plot_constrain_mma_seilbahnmast_steigend"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 For this reason the constraint function value was set to a high number
 (1e+11) in order to keep the volume fraction in the allowed area.
 With this alternation of the code, the optimization of the pylon with MMA
 was possible.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figureheight{7.0cm}
\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figurewidth{10.0cm}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
input{Bilder_Ausarbeitung/Vol_frac_steigend.tex}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Change of volume fraction over the iterations with the implementation of
 the MMA algorithm in the Topology Optimization Application.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "plot_constrain_mma_seilbahnmast_steigend"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The results of the optimizations can be seen in the table 
\begin_inset CommandInset ref
LatexCommand ref
reference "table_mma_oc_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 As expected from the previous section, the OC algorithm converged within
 less iterations that the MMA algorithm did.
 Therefore also the time for optimizing the structure with OC was lower
 than the time needed with MMA.
 
\end_layout

\begin_layout Standard
Even though the optimization with MMA had more iterations, the resulting
 compliance of the two structures are not far apart.
 Especially if one considers, that the initial compliance was over 
\begin_inset Formula $700000$
\end_inset

.
 Due to the fact that 
\noun on
Kratos
\noun default
 was installed as debug version the time consumption of both simulations
 was very high.
 
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Optimality Criteria
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Method of Moving Asymptotes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of elements
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
97152
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
97152
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of nodes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
106225
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
106225
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial compliance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
714199
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
714199
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of iterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
84
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time for simulation 
\begin_inset Formula $[s]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30243
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
82049
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compliance of the optimized structure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4404
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4546
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Direct comparison of the simulations of the aerial lift pylon using the
 quarter model.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "table_mma_oc_seilbahnmast"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "Viertelmodelle"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the resulting structures of the simulations can be seen.
 In this figure the obtained quarter models are shown.
 The model optimized with OC (on the left side) has a more regular structure
 when compared to the structure optimized with the MMA algorithm.
 This for one can be due to the problem with the constraint function, which
 was circumvented by setting the a very high constraint function value.
 On the other hand, this obtained structure could also be a result from
 the optimization algorithm reaching the 100 iterations, which were set
 as limit.
 By reaching the limit the optimization was stopped and therefore this could
 be the reason for the resulting structure.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Seilbahnmast_vietel_OC_vorne.pdf

\end_inset


\begin_inset Graphics
	filename Bilder_Ausarbeitung/Seilbahnmast_vietel_MMA_vorne.pdf

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
View from the front: Left OC right MMA
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Seilbahnmast_vietel_OC_3D.pdf

\end_inset


\begin_inset Graphics
	filename Bilder_Ausarbeitung/Seilbahnmast_vietel_MMA_3D.pdf

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
3D view: left OC right MMA
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Resulting structures from the optimization of the aerial lift pylon model.
 The figure (a) shows the results in a 2D view, (b) shows the results in
 a 3D view.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Viertelmodelle"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Additionally in the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "Ansich oben"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the optimized pylons can be seen from above.
 In this perspective it can be seen, that the material was mainly distributed
 in the middle of the model.
 This is due to the resulting force vector, which was applied to the structure.
 The forces were applied in the figure in order to show how they act on
 the structure.
 As stated in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "loads and forces"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the force in y-direction is higher than the one working in x-direction.
 Therefore the distribution of the material is not in a 
\begin_inset Formula $45°$
\end_inset

 angle, it is shifted clockwise (considering the figure).
 This is to give more stability in the y-direction.
 In addition it can be observed that within the design domain of the structure
 optimized with MMA more material can be found.
 This too is due to the fact that the simulation with MMA was non fully
 converged yet.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Seilbahnmast_oben_OC.pdf

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Pylon seen from the top (OC)
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Seilbahnmast_oben_MMA.pdf

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Pylon seen from the top (MMA)
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
The optimized pylons seen from above.
 In figure (a) the optimization was done with OC, in (b) with MMA.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Ansich oben"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Within the plots of the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "plot_seilhabnmast_oc"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the change of the objective function as well as the change of the volume
 fraction with the OC optimization algorithm can be seen.
 It can be observed that the compliance is minimized very fast in the beginning
 of the optimization, and than slowly converges within the 
\begin_inset Formula $84$
\end_inset

 iterations.
 One can see also, that the volume fraction limit was also violated within
 the optimization.
 As can be seen in the figure, the volume fraction increased in the beginning
 and was then forced back to the allowed value.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figureheight{5.0cm}
\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figurewidth{8.0cm}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
input{Bilder_Ausarbeitung/Compliance_OC_Seilbahnmast.tex}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Change of compliance in the optimization of the aerial lift pylon, using
 OC as optimization algorithm
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figureheight{5.0cm}
\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figurewidth{8.0cm}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
input{Bilder_Ausarbeitung/Constrain_OC_Seilbahnmast.tex}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Change of the volume fraction in the optimization of the aerial lift pylon,
 using OC as optimization algorithm
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Change of the objective function (a) and the volume fraction (b) within
 the optimization of the aerial lift pylon, using OC as optimization algorithm.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "plot_seilhabnmast_oc"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "plot_compliance_mma_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows the change of the compliance and the volume fraction over the iterations
 using MMA as the optimization algorithm.
 It can be seen, that the compliance, equivalent to the OC optimization,
 converges very fast in the beginning.
 But at the iteration number 
\begin_inset Formula $8$
\end_inset

 the objective function increases rapidly until it falls back down 4 iterations
 later.
 This is a problem that should not occur.
 This could be caused by the alternation, which was done to circumvent the
 increasing volume fraction in every iteration.
 After this the objective function converges constantly and results in a
 compliance similar to the one of the simulation done with the OC algorithm
 (see table 
\begin_inset CommandInset ref
LatexCommand ref
reference "table_mma_oc_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 The volume fraction increases also in the beginning and a second time in
 the period where also the objective function increases.
 After that the volume fraction decreases slowly to the point where it reaches
 the allowed value.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setlength
\backslash
figureheight{5.0cm}
\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figurewidth{8.0cm}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
input{Bilder_Ausarbeitung/Compliance_MMA_Seilbahnmast.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Change of compliance in the optimization of the aerial lift pylon, using
 MMA as optimization algorithm
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setlength
\backslash
figureheight{5.0cm}
\end_layout

\begin_layout Plain Layout


\backslash
setlength
\backslash
figurewidth{8.0cm}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
input{Bilder_Ausarbeitung/Constrain_MMA_Seilbahnmast.tex}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Change of the volume fraction in the optimization of the aerial lift pylon,
 using MMA as optimization algorithm
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Change of the objective function (a) and the volume fraction (b) within
 the optimization of the aerial lift pylon, using MMA as optimization algorithm.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "plot_compliance_mma_seilbahnmast"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The problem with the increasing volume fraction could be caused due to the
 fact, that the MMA script is initiated in every iteration.
 As mentioned before, the script was intended to be implemented in a C++
 code, where it is initiated once and the optimization is done, while the
 script is active at all times.
 Although several implementations were made in order to provide the MMA
 updating procedure with the needed information, this could be the source
 of the problem and needs further investigation in the future.
\end_layout

\begin_layout Standard
In order to present the resulting aerial lift pylon as one, the quarter
 models were mirrored with paraview.
 The resulting structures can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "Seilbahnmast_ganz_oc"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "model_ganz_mma_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 From this structures it can be observed, that the pylon optimized with
 OC has a more regular structure, whereas the one optimized with MMA includes
 more material in the middle part (see figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "model_ganz_mma_seilbahnmast"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 
\end_layout

\begin_layout Standard
The obtained structures are oversized.
 To much material would be needed in order to realize this structures.
 But with this simulation it has been shown that examples from the industry
 can be modeled and optimized with Topology Optimization Application.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Seilbahnmast_ganz_OC_2D.pdf
	scale 80

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
2D view of optimized pylon using OC as optimization algorithm
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Seilbahnmast_ganz_OC_3D.pdf
	scale 80

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
3D view of optimized pylon using OC as optimization algorithm
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Aerial lift pylon optimized with Topology Optimization application using
 OC as optimization algorithm.
 Figure (a) shows pylon in 2D view, (b) shows the pylon in 3D view.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Seilbahnmast_ganz_oc"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Seilbahnmast_ganz_MMA_2D.pdf
	scale 80

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
2D view of optimized pylon using MMA as optimization algorithm
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Seilbahnmast_ganz_MMA_3D.pdf
	scale 80

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
3D view of optimized pylon using MMA as optimization algorithm
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Aerial lift pylon optimized with Topology Optimization application using
 MMA (modified) as optimization algorithm.
 Figure (a) shows pylon in 2D view, (b) shows the pylon in 3D view.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "model_ganz_mma_seilbahnmast"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Outlook and Conclusion
\end_layout

\begin_layout Standard
Topology optimization and lightweight design remain an important factor
 in the industry as well as the research.
 Not only can structures be optimized by using less material, but the distributi
on of the material can lead to improved performances regarding stiffness
 or design.
 In addition, the increasing importance of additive manufacturing has a
 positive impact on the use of optimization methods.
 Designs that seemed to need a high effort to build in the past, are now
 being realized by this design method.
 Also the increasing performance of computers reduces the computational
 time and so large models can be simulated in a reasonable amount of time.
\end_layout

\begin_layout Standard
Topology Optimization Application, as an open source optimization tool in
 
\noun on
Kratos
\noun default
, can be used for the presented purposes of optimization problems.
 3D models can be crated and optimized within the this 
\noun on
Kratos
\noun default
 tool.
 With it being open source, the opportunity for companies and research facilitie
s stands to use this application in order to solve given problems or to
 introduce it to research topics.
 Provided, that the tool is further improved and extended, this could be
 the case for the Institute of Aircraft Design at the Technical University
 Munich as well as the Faculty of Science and Technology at the Free University
 of Bozen-Bolzano.
 The optimization tool could be introduced to projects like 
\noun on
Milan 
\noun default
and extended accordingly
\noun on
.
\end_layout

\begin_layout Standard
The main interest of this thesis was to reactivate the existing (but not
 functional) Topology Optimization Application by linking it to the Structural
 Mechanics Application in 
\noun on
Kratos
\noun default
.
 By doing this the large scale topology optimization tool is now available
 in the 
\noun on
Kratos
\noun default
 framework.
 In fact the thesis not only reactivated, but also extended the existing
 application.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
Summary
\end_layout

\begin_layout Standard
This section offers a short summary of the new functions and improvements
 inside the code.
 The data, figures and results, which are summed up in this section, can
 be found on the following repository: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/PhiHo-eng/Semester_Thesis_Hofer_Philipp_Data
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Topology Optimization Application was linked to the Structural Mechanics
 Application in 
\noun on
Kratos
\noun default
.
 This was done by including the functions and scripts of Structural Mechanics
 Application into the code.
 Additionally the new PyBind11 as the interface between Python and C++ was
 included in order for the code to communicate within and with the applications
 in 
\noun on
Kratos.

\noun default
 
\end_layout

\begin_layout Standard
The improvement of the filtering method, where the filtering is now done
 on the undeformed structure, was the first step.
 This allows the software to optimize also structures with a very low Young's
 modulus.
 This is also important if the Young's modulus is normalized, which is common
 in topology optimization.
 Therefore this step was of great interest and as it can be seen in the
 results, the Young's modulus dependency of the filtering process was removed.
 
\end_layout

\begin_layout Standard
With the implementation of the density filter, not only can less branched
 structure be realized, also the opportunity for the extension of the code
 with the Heaviside projection is given.
 The more concrete structure, as it can be seen with the density filter,
 can be of importance if conventional construction techniques are used.
 Although the compliance is not as low as it would be without the filter,
 but the obtained model has a 
\begin_inset Quotes eld
\end_inset

easier
\begin_inset Quotes erd
\end_inset

 structure.
\end_layout

\begin_layout Standard
Introducing MMA to the topology optimization tool, does not only add a second
 optimization method, but also the opportunity to further extend the code.
 Due to the fact that MMA can optimize a problem with more than just one
 constraint, extensions as for example stress restrictions can be implemented
 into the code.
 
\end_layout

\begin_layout Standard
Comparing MMA with the OC optimization method, by using the benchmark example
 of the Cantilever beam, shows good results.
 Although OC achieves the simulation within less iterations, the resulting
 structure and compliance are very similar.
 With an additional change within the code, also the results of the optimized
 pylon show similarities.
 Taking the occurring problem into account, it has to be said, that the
 implementation of the MMA script within the optimization process needs
 further examination and possible alternations, in order for larger examples
 to be optimized without additional changes in the code.
\end_layout

\begin_layout Section
Outlook
\end_layout

\begin_layout Standard
As proposed before, the Topology Optimization Application can and should
 be improved and extended, in order to be included within projects and further
 research.
 Interesting topics for possible extensions and therefore interesting for
 further research with this code are:
\end_layout

\begin_layout Itemize
Stress constraints by taking advantage of the new implementation of MMA
 within the code.
\end_layout

\begin_layout Itemize
Implementation of non-linear elements
\end_layout

\begin_layout Itemize
Implementation of an-isotropic material
\end_layout

\begin_layout Itemize
multiple load-cases and multiple boundary conditions
\end_layout

\begin_layout Standard
In addition the post processing is not fully reactivated in this version.
 Only the volume extraction of the optimized design is possible.
 By re-implementing the surface mesh and the surface mesh smoothing, an
 STL file could be obtained.
 This would offer an additional advantage when using the Topology Optimization
 Application in combination with additive manufacturing.
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
Based on the shown results and the data within this thesis, it can be stated,
 that the reactivation of the Topology Optimization Application was done
 successfully.
 In the introduction the “virtuous circle of lightweight engineering design”
 was mentioned, were an optimization results in lower forces within the
 design and therefore in an lighter structure.
 In a way this principle can also be applied to the work done within this
 thesis: With additional functions better solutions were obtained and computatio
nal improvements were achieved.
 It is now up to further research and additional work to optimize the Topology
 Optimization Application.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "LLS_Vorlage_Latex/Bibliographie"
options "plainnat"

\end_inset


\end_layout

\begin_layout Chapter
Eigenständigkeitserklärung
\end_layout

\begin_layout Standard
Hiermit versichere ich, dass ich die vorliegende Arbeit selbstständig und
 ausschließlich unter Zuhilfenahme der im Literaturverzeichnis angegebenen
 Quellen angefertigt habe.
 Aus anderen Publikationen und Veröffentlichungen entnommenen Ideen, Abbildungen
 und Textstellen sind als solche direkt kenntlich gemacht.
 Die Arbeit ist in gleicher oder ähnlicher Form noch keiner Prüfungsbehörde
 vorgelegt worden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset VSpace 10theight%
\end_inset

 Garching, den 17.
 Mai 2021
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
hfilll
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align right
\begin_inset VSpace 13theight%
\end_inset

 
\begin_inset space \hrulefill{}
\end_inset


\end_layout

\begin_layout Plain Layout
\align center
Philipp Hofer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\start_of_appendix
Appendix
\end_layout

\begin_layout Section
Users Instruction
\end_layout

\begin_layout Standard
This chapter offers a quick guidance through the newly implemented code
 and how to use the new implementations.
 Beginning with the files which need to be changed or altered in order to
 perform a topology optimization (see figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "pythonscripts"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
The file descriptions inside 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

run_topOpt.py
\end_layout

\end_inset

 have to be changed in order for the program to work and calculate the defined
 model.
 Inside the .mdpa file the right elements have to be set (SmallDisplacementSIMPEl
ement).
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

ProjectParameter.json
\end_layout

\end_inset

 contains the boundary conditions and solver settings, which normally don't
 need to be changed.
 Inside the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

OptimizationParaeters.py
\end_layout

\end_inset

 parameters for the code are adjusted in order for the optimization to work
 the way it is intended.
 For example the settings could be as in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tabelle user instruction"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tolerance: 1e-4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Penalty factor: 3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max.
 Iterations: 100
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Filter radius: 1.5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Volume Fraction: 0.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Grey Scale Filter: No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Young's Modulus: 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Continuation Strategy: No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Optimization Algorithm: MMA_algorithm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Density Filter: No
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization parameters
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "tabelle user instruction"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The simulation can be launched inside the terminal.
 By navigating to the folder with the needed files and writing the following
 command:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex URL
status open

\begin_layout Plain Layout

python3run_TopOpt.py
\end_layout

\end_inset

,
\end_layout

\begin_layout Standard
the simulation is initiated.
\end_layout

\begin_layout Standard
The 
\noun on
Kratos 
\noun default
logo appears as well as the Structural Mechanics logo and the Topology Optimizat
ion logo.
 Given the case that all parameters were set accordingly, the optimization
 will be executed.
 While running the scripts in figure (
\begin_inset CommandInset ref
LatexCommand ref
reference "c++functions"
plural "false"
caps "false"
noprefix "false"

\end_inset

) their functions are called.
 The optimization follows the work flow as structured in the figure (
\begin_inset CommandInset ref
LatexCommand ref
reference "optimized structure"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Reault_simulation_end.pdf
	lyxscale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Output file of the simulation viewed in GiD.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Bilder_Ausarbeitung/Reault_simulation_end_post_pro.pdf

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Structure after TopOpt psot processing in paraview
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Output file of the simulation viewed in GiD and paraview.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "optimized structure"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
If the convergence criteria or the maximum number of iterations is reached,
 an output-file is produced, which can be observed with a post-processing
 software.
 Additionally the objective function, the constraint function value as well
 as the absolute and relative percentage change of the objective function
 can be seen on the screen.
\end_layout

\begin_layout Standard
In the case of this work the post-processing software GiD is used.
 Opening the output-file with a post-processor shows a structure as in figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "optimized structure"
plural "false"
caps "false"
noprefix "false"

\end_inset

 (a).
 In the last iteration a 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

restart_file
\end_layout

\end_inset

 is printed.
 By running the 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

run_TopOpt_PostProcessing.py
\end_layout

\end_inset

 file with the filename of the last restart file, elements below a certain
 threshold (defined by the user) can be deleted and the structure in figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "optimized structure"
plural "false"
caps "false"
noprefix "false"

\end_inset

 (b) can be obtained.
 
\end_layout

\end_body
\end_document
